{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\src\\\\components\\\\Pages\\\\Home.js\";\nimport { Card, Container } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { API_KEY } from './const';\n\nconst SummonerRow = ({\n  name\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        summonerData = _useState2[0],\n        setSummonerData = _useState2[1];\n\n  useEffect(() => {\n    const fetchSummonerData = async () => {\n      try {\n        const response = await fetch(`https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${name}${API_KEY}`);\n        const data = await response.json();\n        setSummonerData(data);\n        console.log(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchSummonerData();\n  }, [name]);\n\n  const _ref = (summonerData === null || summonerData === void 0 ? void 0 : summonerData.rankedData) || {},\n        tier = _ref.tier,\n        rank = _ref.rank,\n        wins = _ref.wins,\n        losses = _ref.losses,\n        leaguePoints = _ref.leaguePoints;\n\n  return React.createElement(TableRow, {\n    sx: {\n      'td, th': {\n        border: 0,\n        color: 'white'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, name), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, summonerData === null || summonerData === void 0 ? void 0 : summonerData.name), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, tier, \" \", rank), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, wins), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, losses), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, leaguePoints));\n};\n\nconst Home = () => {\n  const players = [{\n    id: 1,\n    name: \"Haaan\"\n  }, {\n    id: 2,\n    name: \"Haaan\"\n  }, {\n    id: 3,\n    name: \"Haaan\"\n  }];\n  return React.createElement(Page, {\n    title: \"Ranking\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Table, {\n    sx: {\n      minWidth: 650,\n      bgcolor: '#2F4F4F'\n    },\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Player\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Summoner Name\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Rank\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"W\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"L\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"LP\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, players.map(name => React.createElement(SummonerRow, {\n    key: name,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/src/components/Pages/Home.js"],"names":["Card","Container","React","useState","useEffect","Page","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","API_KEY","SummonerRow","name","summonerData","setSummonerData","fetchSummonerData","response","fetch","data","json","console","log","error","rankedData","tier","rank","wins","losses","leaguePoints","border","color","Home","players","id","minWidth","bgcolor","map"],"mappings":"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","sourcesContent":["import { Card, Container } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { API_KEY } from './const';\n\nconst SummonerRow = ({ name }) => {\n  const [summonerData, setSummonerData] = useState({});\n\n  useEffect(() => {\n    const fetchSummonerData = async () => {\n      try {\n        const response = await fetch(`https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${name}${API_KEY}`);\n        const data = await response.json();\n        setSummonerData(data);\n        console.log(response)\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchSummonerData();\n  }, [name]);\n\n  const { tier, rank, wins, losses, leaguePoints } = summonerData?.rankedData || {};\n\n  return (\n    <TableRow sx={{ 'td, th': { border: 0, color: 'white' } }}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell align=\"right\">{summonerData?.name}</TableCell>\n      <TableCell align=\"right\">{tier} {rank}</TableCell>\n      <TableCell align=\"right\">{wins}</TableCell>\n      <TableCell align=\"right\">{losses}</TableCell>\n      <TableCell align=\"right\">{leaguePoints}</TableCell>\n    </TableRow>\n  );\n};\n\nconst Home = () => {\n    const players = [\n        { id: 1, name: \"Haaan\" },\n        { id: 2, name: \"Haaan\" },\n        { id: 3, name: \"Haaan\" }\n      ];\n\n  return (\n    <Page title=\"Ranking\">\n      <Container>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650, bgcolor: '#2F4F4F' }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell sx={{ color: 'white' }}>Player</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">Summoner Name</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">Rank</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">W</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">L</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">LP</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {players.map((name) => (\n                <SummonerRow key={name} name={name} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}