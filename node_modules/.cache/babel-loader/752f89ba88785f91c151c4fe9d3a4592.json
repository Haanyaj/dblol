{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"autoHideDuration\", \"children\", \"component\", \"components\", \"componentsProps\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ClickAwayListener from '../ClickAwayListener';\nimport composeClasses from '../composeClasses';\nimport { getSnackbarUnstyledUtilityClass } from './snackbarUnstyledClasses';\nimport useSnackbar from './useSnackbar';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses() {\n  var slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getSnackbarUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled snackbar](https://mui.com/base/react-snackbar/)\n *\n * API:\n *\n * - [SnackbarUnstyled API](https://mui.com/base/api/snackbar-unstyled/)\n */\n\n\nvar SnackbarUnstyled =\n/*#__PURE__*/\nReact.forwardRef(function SnackbarUnstyled(props, ref) {\n  var _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      _props$exited = props.exited,\n      exited = _props$exited === void 0 ? true : _props$exited,\n      onClose = props.onClose,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = useUtilityClasses();\n\n  var _useSnackbar = useSnackbar(_extends({}, props, {\n    autoHideDuration: autoHideDuration,\n    disableWindowBlurListener: disableWindowBlurListener,\n    onClose: onClose,\n    open: open,\n    resumeHideDuration: resumeHideDuration,\n    ref: ref\n  })),\n      getRootProps = _useSnackbar.getRootProps,\n      onClickAway = _useSnackbar.onClickAway;\n\n  var ownerState = props;\n  var Root = component || components.Root || 'div';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: componentsProps.root,\n    additionalProps: {\n      ref: ref\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  var clickAwayListenerProps = useSlotProps({\n    elementType: ClickAwayListener,\n    externalSlotProps: componentsProps.clickAwayListener,\n    additionalProps: {\n      onClickAway: onClickAway\n    },\n    ownerState: ownerState\n  }); // ClickAwayListener doesn't support ownerState\n\n  delete clickAwayListenerProps.ownerState; // So that we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    _jsx(ClickAwayListener, _extends({}, clickAwayListenerProps, {\n      children:\n      /*#__PURE__*/\n      _jsx(Root, _extends({}, rootProps, {\n        children: children\n      }))\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Snackbar.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Snackbar.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * The prop used to handle exited transition and unmount the component.\n   * @default true\n   */\n  exited: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number\n} : void 0;\nexport default SnackbarUnstyled;","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/node_modules/@mui/base/SnackbarUnstyled/SnackbarUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","ClickAwayListener","composeClasses","getSnackbarUnstyledUtilityClass","useSnackbar","useSlotProps","jsx","_jsx","useUtilityClasses","slots","root","undefined","SnackbarUnstyled","forwardRef","props","ref","autoHideDuration","children","component","components","componentsProps","disableWindowBlurListener","exited","onClose","open","resumeHideDuration","other","classes","getRootProps","onClickAway","ownerState","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","className","clickAwayListenerProps","clickAwayListener","process","env","NODE_ENV","propTypes","number","node","shape","oneOfType","func","element","isRequired","disableReactTree","bool","mouseEvent","oneOf","touchEvent","object","onBlur","onFocus","onMouseEnter","onMouseLeave"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoHideDuration\", \"children\", \"component\", \"components\", \"componentsProps\", \"disableWindowBlurListener\", \"exited\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ClickAwayListener from '../ClickAwayListener';\nimport composeClasses from '../composeClasses';\nimport { getSnackbarUnstyledUtilityClass } from './snackbarUnstyledClasses';\nimport useSnackbar from './useSnackbar';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getSnackbarUnstyledUtilityClass, undefined);\n};\n/**\n *\n * Demos:\n *\n * - [Unstyled snackbar](https://mui.com/base/react-snackbar/)\n *\n * API:\n *\n * - [SnackbarUnstyled API](https://mui.com/base/api/snackbar-unstyled/)\n */\n\n\nconst SnackbarUnstyled = /*#__PURE__*/React.forwardRef(function SnackbarUnstyled(props, ref) {\n  const {\n    autoHideDuration = null,\n    children,\n    component,\n    components = {},\n    componentsProps = {},\n    disableWindowBlurListener = false,\n    exited = true,\n    onClose,\n    open,\n    resumeHideDuration\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses();\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, props, {\n    autoHideDuration,\n    disableWindowBlurListener,\n    onClose,\n    open,\n    resumeHideDuration,\n    ref\n  }));\n  const ownerState = props;\n  const Root = component || components.Root || 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: componentsProps.root,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const clickAwayListenerProps = useSlotProps({\n    elementType: ClickAwayListener,\n    externalSlotProps: componentsProps.clickAwayListener,\n    additionalProps: {\n      onClickAway\n    },\n    ownerState\n  }); // ClickAwayListener doesn't support ownerState\n\n  delete clickAwayListenerProps.ownerState; // So that we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({}, clickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Snackbar.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Snackbar.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clickAwayListener: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * The prop used to handle exited transition and unmount the component.\n   * @default true\n   */\n  exited: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number\n} : void 0;\nexport default SnackbarUnstyled;"]},"metadata":{},"sourceType":"module"}