{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\src\\\\components\\\\Pages\\\\Home.js\";\nimport { Card, Container } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Summoner } from './Summoner';\nconst API_KEY = \"?api_key=\" + \"RGAPI-6a96a8f8-d021-4f81-8828-898ab358a5fd\";\nconst players = [\"Anxhanna\", \"ogfcnxb\"];\n/* function getResult(player){\n   const APICall = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + player + API_KEY;\n   var tmp;\n   fetch(APICall).then((response) => {\n       console.log(response);\n       return response.json();\n    }) .then((result) => {\n       console.log('res', result)\n   //   this.setState({ summoner_id: result.id});\n   })\n }\n       */\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      post: {},\n      summoner_infos: [{}, {}],\n      summoner_id: '',\n      summoner_account_id: '',\n      status: 0,\n      error_message: null,\n      body: null,\n      icon_url: ''\n    };\n    const APICall = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + players[0] + API_KEY;\n    fetch(APICall).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(result => {\n      console.log('res', result);\n\n      if (result.status) {\n        this.setState({\n          status: result.status.status_code\n        });\n      } else {\n        this.setState({\n          status: 0\n        });\n      }\n\n      this.setState({\n        summoner_id: result.id,\n        summoner_account_id: result.accountId,\n        post: result\n      }); //icon\n\n      this.setState({\n        icon_url: 'http://ddragon.leagueoflegends.com/cdn/10.13.1/img/profileicon/' + result.profileIconId + '.png'\n      });\n\n      if (this.state.status === 0) {\n        fetch('https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/' + this.state.summoner_id + API_KEY).then(response => {\n          return response.json();\n        }).then(result => {\n          console.log('res is : ', result);\n          this.setState({\n            summoner_infos: result\n          });\n        });\n      } else {\n        console.log(this.state.status);\n      }\n\n      console.log(this.state.summoner_infos[1] ? this.state.summoner_infos[1].tier : null);\n      const sum1 = Object.create({}, {\n        name: {\n          value: \"Alvyn\"\n        },\n        pseudo: {\n          value: players[0]\n        },\n        rank: {\n          value: this.state.summoner_infos[1].tier\n        }\n      });\n      console.log(\"oeoeooe\" + sum1.rank); //  const sum1 = Summoner(players[0],this.state.summoner_infos[1] ? this.state.summoner_infos[1].tier : null + this.state.summoner_infos[1] ? this.state.summoner_infos[1].rank : null );\n    });\n    /*  const APICall1 = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + players[1] + API_KEY;\n      fetch(APICall1).then((response) => {\n          console.log(response);\n          return response.json();\n           }) .then((result) => {\n          console.log('res', result)\n          if (result.status) {\n              this.setState({ status: result.status.status_code })\n          } else {\n              this.setState({status: 0})\n          }\n          this.setState({ summoner_id: result.id, summoner_account_id: result.accountId, post: result });\n          //icon\n          this.setState({ icon_url: 'http://ddragon.leagueoflegends.com/cdn/10.13.1/img/profileicon/' + result.profileIconId + '.png' })\n          if (this.state.status === 0) {\n              fetch('https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/' + this.state.summoner_id + API_KEY)\n                  .then((response) => {\n                      return response.json()\n                  })\n                  .then((result) => {\n                      console.log('res is : ', result)\n                      this.setState({ summoner_infos: result })\n                  })\n          } else {\n              console.log(this.state.status)\n          }\n      });\n    */\n  }\n\n  render() {\n    /*  for (var i = 0; i < players.length; i++) {\n          this.player.name = players[i];\n          var tmp = searchPlayer(players[i]);\n           console.log(\"test  \" + players[i] + \"  \"+  tmp);\n          //this.player.summoner_id = tmp.id;\n          //this.summoner_account_id= tmp.accountId;\n          //tmp = getPlayerDatas(tmp);\n          console.log(tmp);\n      }*/\n    const _this$state = this.state,\n          name = _this$state.name,\n          summoner_infos = _this$state.summoner_infos,\n          icon_url = _this$state.icon_url,\n          error_message = _this$state.error_message,\n          body = _this$state.body;\n    return React.createElement(Page, {\n      title: \"Ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sx: {\n        minWidth: 650,\n        bgcolor: '#2F4F4F'\n      },\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Player\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Summoner Name\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Rank\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"W\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"L\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"LP\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      sx: {\n        'td, th': {\n          border: 0,\n          color: 'white'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Alvyn\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, players[0]), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, summoner_infos[1] ? summoner_infos[1].tier : null, \" \", summoner_infos[1] ? summoner_infos[1].rank : null), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, summoner_infos[1] && summoner_infos[1].leaguePoints ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, summoner_infos[1].leaguePoints, \" lp\") : null, summoner_infos[1] && summoner_infos[1].wins ? summoner_infos[1].wins : null), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, summoner_infos[1] && summoner_infos[1].losses ? summoner_infos[1].losses : null), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, summoner_infos[1].leaguePoints))))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/src/components/Pages/Home.js"],"names":["Card","Container","React","useState","Page","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Summoner","API_KEY","players","Home","Component","constructor","props","state","name","post","summoner_infos","summoner_id","summoner_account_id","status","error_message","body","icon_url","APICall","fetch","then","response","console","log","json","result","setState","status_code","id","accountId","profileIconId","tier","sum1","Object","create","value","pseudo","rank","render","minWidth","bgcolor","color","border","leaguePoints","wins","losses"],"mappings":"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","sourcesContent":["import { Card, Container } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport {Summoner} from './Summoner';\n\n\n  const API_KEY = \"?api_key=\" + \"RGAPI-6a96a8f8-d021-4f81-8828-898ab358a5fd\";\n  const players = [\"Anxhanna\", \"ogfcnxb\"];\n\n    \n /* function getResult(player){\n    const APICall = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + player + API_KEY;\n    var tmp;\n    fetch(APICall).then((response) => {\n        console.log(response);\n        return response.json();\n\n    }) .then((result) => {\n        console.log('res', result)\n    //   this.setState({ summoner_id: result.id});\n    })\n  }\n        */\n\nexport default class Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state= {\n            name: \"\",\n            post: {},\n            summoner_infos: [{},{}],\n            summoner_id: '',\n            summoner_account_id: '',\n            status: 0,\n            error_message: null,\n            body: null,\n            icon_url: '',\n        };\n    const APICall = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + players[0] + API_KEY;\n    fetch(APICall).then((response) => {\n        console.log(response);\n        return response.json();\n\n    }) .then((result) => {\n        console.log('res', result)\n        if (result.status) {\n            this.setState({ status: result.status.status_code })\n        } else {\n            this.setState({status: 0})\n        }\n        this.setState({ summoner_id: result.id, summoner_account_id: result.accountId, post: result });\n        //icon\n        this.setState({ icon_url: 'http://ddragon.leagueoflegends.com/cdn/10.13.1/img/profileicon/' + result.profileIconId + '.png' })\n        if (this.state.status === 0) {\n            fetch('https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/' + this.state.summoner_id + API_KEY)\n                .then((response) => {\n                    return response.json()\n                })\n                .then((result) => {\n                    console.log('res is : ', result)\n                    this.setState({ summoner_infos: result })\n                })\n        } else {\n            console.log(this.state.status)\n        }\n        console.log(this.state.summoner_infos[1] ? this.state.summoner_infos[1].tier : null )\n        const sum1 = Object.create({}, {name: {value:\"Alvyn\"}, pseudo: {value: players[0]}, rank: {value: this.state.summoner_infos[1].tier  }             });\n        console.log(\"oeoeooe\" + sum1.rank);\n      //  const sum1 = Summoner(players[0],this.state.summoner_infos[1] ? this.state.summoner_infos[1].tier : null + this.state.summoner_infos[1] ? this.state.summoner_infos[1].rank : null );\n    });\n\n      /*  const APICall1 = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + players[1] + API_KEY;\n        fetch(APICall1).then((response) => {\n            console.log(response);\n            return response.json();\n    \n        }) .then((result) => {\n            console.log('res', result)\n            if (result.status) {\n                this.setState({ status: result.status.status_code })\n            } else {\n                this.setState({status: 0})\n            }\n            this.setState({ summoner_id: result.id, summoner_account_id: result.accountId, post: result });\n            //icon\n            this.setState({ icon_url: 'http://ddragon.leagueoflegends.com/cdn/10.13.1/img/profileicon/' + result.profileIconId + '.png' })\n            if (this.state.status === 0) {\n                fetch('https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/' + this.state.summoner_id + API_KEY)\n                    .then((response) => {\n                        return response.json()\n                    })\n                    .then((result) => {\n                        console.log('res is : ', result)\n                        this.setState({ summoner_infos: result })\n                    })\n            } else {\n                console.log(this.state.status)\n            }\n        });\n*/\n    \n    }\n  \n\n    render() {\n      /*  for (var i = 0; i < players.length; i++) {\n            this.player.name = players[i];\n            var tmp = searchPlayer(players[i]);\n\n            console.log(\"test  \" + players[i] + \"  \"+  tmp);\n            //this.player.summoner_id = tmp.id;\n            //this.summoner_account_id= tmp.accountId;\n            //tmp = getPlayerDatas(tmp);\n            console.log(tmp);\n        }*/\n        const { name, summoner_infos, icon_url, error_message, body } = this.state;\n    return (\n        <Page title=\"Ranking\">\n                <Container>\n                    <TableContainer component={Paper} >\n        <aside>\n       <Table sx={{ minWidth: 650 ,bgcolor: '#2F4F4F'}} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow >\n            <TableCell sx={{ color: 'white'}}>Player</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">Summoner Name</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">Rank</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">W</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">L</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">LP</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            <TableRow\n              sx={{ 'td, th': { border: 0, color: 'white' } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">Alvyn</TableCell>\n\n              <TableCell align=\"right\">{players[0]}{}</TableCell>\n              <TableCell align=\"right\">{ summoner_infos[1] ? summoner_infos[1].tier : null } { summoner_infos[1] ? summoner_infos[1].rank : null }</TableCell>\n              <TableCell align=\"right\">{ (summoner_infos[1] && summoner_infos[1].leaguePoints) ? <p>{summoner_infos[1].leaguePoints } lp</p> : null }{(summoner_infos[1] && summoner_infos[1].wins) ? summoner_infos[1].wins : null}</TableCell>\n              <TableCell align=\"right\">{(summoner_infos[1] && summoner_infos[1].losses) ? summoner_infos[1].losses : null}</TableCell>   \n              <TableCell align=\"right\">{summoner_infos[1].leaguePoints}</TableCell>          \n            </TableRow>\n        </TableBody>\n      </Table>\n      </aside>\n    </TableContainer>\n   \n                </Container>\n        </Page>\n    )\n}\n}"]},"metadata":{},"sourceType":"module"}