{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\src\\\\components\\\\Pages\\\\Home.js\";\nimport { Card, Container } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nvar tmp;\nconst API_KEY = \"?api_key=\" + \"RGAPI-6a96a8f8-d021-4f81-8828-898ab358a5fd\";\nconst players = [\"Anxhanna\"];\n\nfunction getResult(player) {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const APICall = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + player + API_KEY;\n  var tmp;\n  fetch(APICall).then(response => {\n    console.log(response);\n    return response.json();\n  }).then(result => {\n    console.log('res', result);\n    this.setState({\n      summoner_id: result.id\n    });\n  });\n}\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      post: {},\n      summoner_infos: [{}, {}],\n      summoner_id: '',\n      summoner_account_id: '',\n      status: 0,\n      error_message: null,\n      body: null,\n      icon_url: ''\n    };\n    this.summoners = {\n      players: {}\n    };\n  }\n\n  render() {\n    /*  for (var i = 0; i < players.length; i++) {\n          this.player.name = players[i];\n          var tmp = searchPlayer(players[i]);\n           console.log(\"test  \" + players[i] + \"  \"+  tmp);\n          //this.player.summoner_id = tmp.id;\n          //this.summoner_account_id= tmp.accountId;\n          //tmp = getPlayerDatas(tmp);\n          console.log(tmp);\n      }*/\n    const _this$state = this.state,\n          name = _this$state.name,\n          summoner_infos = _this$state.summoner_infos,\n          icon_url = _this$state.icon_url,\n          error_message = _this$state.error_message,\n          body = _this$state.body;\n    return React.createElement(Page, {\n      title: \"Ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, getResult(players[0]), React.createElement(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Table, {\n      sx: {\n        minWidth: 650,\n        bgcolor: '#2F4F4F'\n      },\n      \"aria-label\": \"simple table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Player\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Summoner Name\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Rank\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"W\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"L\"), React.createElement(TableCell, {\n      sx: {\n        color: 'white'\n      },\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"WR\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, rows.map(row => React.createElement(TableRow, {\n      key: row.name,\n      sx: {\n        'td, th': {\n          border: 0,\n          color: 'white'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, row.name), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, row.calories), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, row.fat), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, row.carbs), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, row.protein))))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/src/components/Pages/Home.js"],"names":["Card","Container","React","useState","Page","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","name","calories","fat","carbs","protein","rows","tmp","API_KEY","players","getResult","player","state","setState","APICall","fetch","then","response","console","log","json","result","summoner_id","id","Home","Component","constructor","props","post","summoner_infos","summoner_account_id","status","error_message","body","icon_url","summoners","render","minWidth","bgcolor","color","map","row","border"],"mappings":"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","sourcesContent":["import { Card, Container } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nfunction createData(\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n  ) {\n    return { name, calories, fat, carbs, protein };\n  }\n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9), \n  ];\n\n  var  tmp;\n  const API_KEY = \"?api_key=\" + \"RGAPI-6a96a8f8-d021-4f81-8828-898ab358a5fd\";\n  const players = [\"Anxhanna\"];\n\n    \n  function getResult(player){\n    const [state, setState] = useState(0);\n    const APICall = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + player + API_KEY;\n    var tmp;\n    fetch(APICall).then((response) => {\n        console.log(response);\n        return response.json();\n\n    }) .then((result) => {\n        console.log('res', result)\n        this.setState({ summoner_id: result.id});\n    });\n  }\n        \n\nexport default class Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state= {\n            name: \"\",\n            post: {},\n            summoner_infos: [{},{}],\n            summoner_id: '',\n            summoner_account_id: '',\n            status: 0,\n            error_message: null,\n            body: null,\n            icon_url: ''\n        };\n        this.summoners= {\n            players:{}\n        };\n    }\n\n    render() {\n      /*  for (var i = 0; i < players.length; i++) {\n            this.player.name = players[i];\n            var tmp = searchPlayer(players[i]);\n\n            console.log(\"test  \" + players[i] + \"  \"+  tmp);\n            //this.player.summoner_id = tmp.id;\n            //this.summoner_account_id= tmp.accountId;\n            //tmp = getPlayerDatas(tmp);\n            console.log(tmp);\n        }*/\n        const { name, summoner_infos, icon_url, error_message, body } = this.state;\n    return (\n        <Page title=\"Ranking\">\n                <Container>\n                    {getResult(players[0])}\n                    <TableContainer component={Paper} >\n      <Table sx={{ minWidth: 650 ,bgcolor: '#2F4F4F'}} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow >\n            <TableCell sx={{ color: 'white'}}>Player</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">Summoner Name</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">Rank</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">W</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">L</TableCell>\n            <TableCell sx={{ color: 'white'}} align=\"right\">WR</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ 'td, th': { border: 0, color: 'white' } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n                   \n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n                </Container>\n        </Page>\n    )\n}\n}"]},"metadata":{},"sourceType":"module"}