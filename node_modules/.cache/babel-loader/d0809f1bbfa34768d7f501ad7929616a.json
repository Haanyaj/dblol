{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { createContext, useContext, createElement, useMemo, useState as useState$1, useEffect as useEffect$1, useRef as useRef$1, isValidElement, cloneElement, Fragment } from 'react';\nvar VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit'\n};\nvar RADIO_INPUT = 'radio';\nvar FILE_INPUT = 'file';\nvar VALUE = 'value';\nvar UNDEFINED = 'undefined';\nvar EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input'\n};\nvar INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nvar REGEX_IS_DEEP_PROP = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nvar REGEX_IS_PLAIN_PROP = /^\\w*$/;\nvar REGEX_PROP_NAME = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\nvar REGEX_ESCAPE_CHAR = /\\\\(\\\\)?/g;\n\nfunction attachEventListeners(_ref) {\n  var field = _ref.field,\n      handleChange = _ref.handleChange,\n      isRadioOrCheckbox = _ref.isRadioOrCheckbox;\n  var ref = field.ref;\n\n  if (ref.addEventListener) {\n    ref.addEventListener(isRadioOrCheckbox ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n\nvar isUndefined = function isUndefined(val) {\n  return val === undefined;\n};\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || isUndefined(value);\n};\n\nvar isArray = function isArray(value) {\n  return Array.isArray(value);\n};\n\nvar isObjectType = function isObjectType(value) {\n  return typeof value === 'object';\n};\n\nvar isObject = function isObject(value) {\n  return !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n};\n\nvar isKey = function isKey(value) {\n  return !isArray(value) && (REGEX_IS_PLAIN_PROP.test(value) || !REGEX_IS_DEEP_PROP.test(value));\n};\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n  string.replace(REGEX_PROP_NAME, function (match, number, quote, string) {\n    result.push(quote ? string.replace(REGEX_ESCAPE_CHAR, '$1') : number || match);\n  });\n  return result;\n};\n\nfunction set(object, path, value) {\n  var index = -1;\n  var tempPath = isKey(path) ? [path] : stringToPath(path);\n  var length = tempPath.length;\n  var lastIndex = length - 1;\n\n  while (++index < length) {\n    var key = tempPath[index];\n    var newValue = value;\n\n    if (index !== lastIndex) {\n      var objValue = object[key];\n      newValue = isObject(objValue) || isArray(objValue) ? objValue : !isNaN(tempPath[index + 1]) ? [] : {};\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n\n  return object;\n}\n\nvar transformToNestObject = function transformToNestObject(data) {\n  return Object.entries(data).reduce(function (previous, _ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n\n    if (REGEX_IS_DEEP_PROP.test(key)) {\n      set(previous, key, value);\n      return previous;\n    }\n\n    return Object.assign(Object.assign({}, previous), _defineProperty({}, key, value));\n  }, {});\n};\n\nvar removeAllEventListeners = function removeAllEventListeners(ref, validateWithStateUpdate) {\n  if (ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n\nvar isRadioInput = function isRadioInput(type) {\n  return type === RADIO_INPUT;\n};\n\nvar isCheckBoxInput = function isCheckBoxInput(type) {\n  return type === 'checkbox';\n};\n\nfunction isDetached(element) {\n  if (!element) {\n    return true;\n  }\n\n  if (!(element instanceof HTMLElement) || element.nodeType === Node.DOCUMENT_NODE) {\n    return false;\n  }\n\n  return isDetached(element.parentNode);\n}\n\nfunction findRemovedFieldAndRemoveListener(fields, handleChange, field, forceDelete) {\n  if (!field) {\n    return;\n  }\n\n  var ref = field.ref,\n      _field$ref = field.ref,\n      name = _field$ref.name,\n      type = _field$ref.type,\n      mutationWatcher = field.mutationWatcher;\n\n  if (!type) {\n    return;\n  }\n\n  var fieldValue = fields[name];\n\n  if ((isRadioInput(type) || isCheckBoxInput(type)) && fieldValue) {\n    var options = fieldValue.options;\n\n    if (isArray(options) && options.length) {\n      options.forEach(function (_ref4, index) {\n        var ref = _ref4.ref;\n\n        if (ref && isDetached(ref) || forceDelete) {\n          var _mutationWatcher = ref.mutationWatcher;\n          removeAllEventListeners(ref, handleChange);\n\n          if (_mutationWatcher) {\n            _mutationWatcher.disconnect();\n          }\n\n          options.splice(index, 1);\n        }\n      });\n\n      if (options && !options.length) {\n        delete fields[name];\n      }\n    } else {\n      delete fields[name];\n    }\n  } else if (isDetached(ref) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fields[name];\n  }\n}\n\nvar defaultReturn = {\n  isValid: false,\n  value: ''\n};\n\nvar getRadioValue = function getRadioValue(options) {\n  return isArray(options) ? options.reduce(function (previous, _ref5) {\n    var _ref5$ref = _ref5.ref,\n        checked = _ref5$ref.checked,\n        value = _ref5$ref.value;\n    return checked ? {\n      isValid: true,\n      value: value\n    } : previous;\n  }, defaultReturn) : defaultReturn;\n};\n\nvar getMultipleSelectValue = function getMultipleSelectValue(options) {\n  return _toConsumableArray(options).filter(function (_ref6) {\n    var selected = _ref6.selected;\n    return selected;\n  }).map(function (_ref7) {\n    var value = _ref7.value;\n    return value;\n  });\n};\n\nvar isFileInput = function isFileInput(type) {\n  return type === FILE_INPUT;\n};\n\nvar isMultipleSelect = function isMultipleSelect(type) {\n  return type === 'select-multiple';\n};\n\nvar isEmptyString = function isEmptyString(value) {\n  return value === '';\n};\n\nvar defaultResult = {\n  value: false,\n  isValid: false\n};\nvar validResult = {\n  value: true,\n  isValid: true\n};\n\nvar getCheckboxValue = function getCheckboxValue(options) {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      var values = options.filter(function (_ref8) {\n        var checked = _ref8.ref.checked;\n        return checked;\n      }).map(function (_ref9) {\n        var value = _ref9.ref.value;\n        return value;\n      });\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n\n    var _options$0$ref = options[0].ref,\n        checked = _options$0$ref.checked,\n        value = _options$0$ref.value,\n        attributes = _options$0$ref.attributes;\n    return checked ? attributes && !isUndefined(attributes.value) ? isUndefined(value) || isEmptyString(value) ? validResult : {\n      value: value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n\n  return defaultResult;\n};\n\nfunction getFieldValue(fields, ref) {\n  var type = ref.type,\n      name = ref.name,\n      options = ref.options,\n      value = ref.value,\n      files = ref.files;\n  var field = fields[name];\n\n  if (isFileInput(type)) {\n    return files;\n  }\n\n  if (isRadioInput(type)) {\n    return field ? getRadioValue(field.options).value : '';\n  }\n\n  if (isMultipleSelect(type)) {\n    return getMultipleSelectValue(options);\n  }\n\n  if (isCheckBoxInput(type)) {\n    return field ? getCheckboxValue(field.options).value : false;\n  }\n\n  return value;\n}\n\nvar getFieldsValues = function getFieldsValues(fields) {\n  return Object.values(fields).reduce(function (previous, _ref10) {\n    var ref = _ref10.ref,\n        name = _ref10.ref.name;\n    return Object.assign(Object.assign({}, previous), _defineProperty({}, name, getFieldValue(fields, ref)));\n  }, {});\n};\n\nvar isEmptyObject = function isEmptyObject(value) {\n  return isObject(value) && !Object.keys(value).length;\n};\n\nvar isSameError = function isSameError(error, type, message) {\n  return isObject(error) && error.type === type && error.message === message;\n};\n\nvar get = function get(obj, path, defaultValue) {\n  var result = path.split(/[,[\\].]+?/).filter(Boolean).reduce(function (result, key) {\n    return isNullOrUndefined(result) ? result : result[key];\n  }, obj);\n  return isUndefined(result) || result === obj ? obj[path] || defaultValue : result;\n};\n\nfunction shouldUpdateWithError(_ref11) {\n  var errors = _ref11.errors,\n      name = _ref11.name,\n      error = _ref11.error,\n      validFields = _ref11.validFields,\n      fieldsWithValidation = _ref11.fieldsWithValidation;\n  var isFieldValid = isEmptyObject(error);\n  var isFormValid = isEmptyObject(errors);\n  var currentFieldError = get(error, name);\n  var existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name) || existFieldError && existFieldError.isManual) {\n    return false;\n  }\n\n  if (isFormValid !== isFieldValid || !isFormValid && !existFieldError || isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name)) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError.type, currentFieldError.message);\n}\n\nvar isRegex = function isRegex(value) {\n  return value instanceof RegExp;\n};\n\nvar getValueAndMessage = function getValueAndMessage(validationData) {\n  var isPureObject = isObject(validationData) && !isRegex(validationData);\n  return {\n    value: isPureObject ? validationData.value : validationData,\n    message: isPureObject ? validationData.message : ''\n  };\n};\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n\nvar isBoolean = function isBoolean(value) {\n  return typeof value === 'boolean';\n};\n\nfunction getValidateError(result, ref) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  var isStringValue = isString(result);\n\n  if (isStringValue || isBoolean(result) && !result) {\n    var message = isStringValue ? result : '';\n    return {\n      type: type,\n      message: message,\n      ref: ref\n    };\n  }\n}\n\nvar appendErrors = function appendErrors(name, validateAllFieldCriteria, errors, type, message) {\n  if (!validateAllFieldCriteria) {\n    return {};\n  }\n\n  var error = errors[name];\n  return Object.assign(Object.assign({}, error), {\n    types: Object.assign(Object.assign({}, error && error.types ? error.types : {}), _defineProperty({}, type, message || true))\n  });\n};\n\nvar validateField = function validateField(fieldsRef, validateAllFieldCriteria, _ref12) {\n  var ref, _ref12$ref, type, value, name, valueAsNumber, valueAsDate, options, required, maxLength, minLength, min, max, pattern, validate, fields, error, isRadio, isCheckBox, isRadioOrCheckbox, isEmpty, appendErrorsCurry, getMinMaxMessage, message, exceedMax, exceedMin, _getValueAndMessage, maxValue, maxMessage, _getValueAndMessage2, minValue, minMessage, valueNumber, valueDate, _getValueAndMessage3, maxLengthValue, maxLengthMessage, _getValueAndMessage4, minLengthValue, minLengthMessage, inputLength, _exceedMax, _exceedMin, _getValueAndMessage5, patternValue, patternMessage, fieldValue, validateRef, result, validateError, validateFunctions, validationResult;\n\n  return _regeneratorRuntime.async(function validateField$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          ref = _ref12.ref, _ref12$ref = _ref12.ref, type = _ref12$ref.type, value = _ref12$ref.value, name = _ref12$ref.name, valueAsNumber = _ref12$ref.valueAsNumber, valueAsDate = _ref12$ref.valueAsDate, options = _ref12.options, required = _ref12.required, maxLength = _ref12.maxLength, minLength = _ref12.minLength, min = _ref12.min, max = _ref12.max, pattern = _ref12.pattern, validate = _ref12.validate;\n          fields = fieldsRef.current;\n          error = {};\n          isRadio = isRadioInput(type);\n          isCheckBox = isCheckBoxInput(type);\n          isRadioOrCheckbox = isRadio || isCheckBox;\n          isEmpty = isEmptyString(value);\n          appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n\n          getMinMaxMessage = function getMinMaxMessage(exceedMax, maxLengthMessage, minLengthMessage) {\n            var maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n            var minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n            var message = exceedMax ? maxLengthMessage : minLengthMessage;\n            error[name] = Object.assign({\n              type: exceedMax ? maxType : minType,\n              message: message,\n              ref: ref\n            }, exceedMax ? appendErrorsCurry(maxType, message) : appendErrorsCurry(minType, message));\n\n            if (!validateAllFieldCriteria) {\n              return error;\n            }\n          };\n\n          if (!(required && (!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value)) || isBoolean(value) && !value || isCheckBox && !getCheckboxValue(options).isValid || isRadio && !getRadioValue(options).isValid))) {\n            _context2.next = 14;\n            break;\n          }\n\n          message = isString(required) ? required : getValueAndMessage(required).message;\n          error[name] = Object.assign({\n            type: INPUT_VALIDATION_RULES.required,\n            message: message,\n            ref: isRadioOrCheckbox ? fields[name].options[0].ref : ref\n          }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n\n          if (validateAllFieldCriteria) {\n            _context2.next = 14;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", error);\n\n        case 14:\n          if (!(!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n            _context2.next = 22;\n            break;\n          }\n\n          _getValueAndMessage = getValueAndMessage(max), maxValue = _getValueAndMessage.value, maxMessage = _getValueAndMessage.message;\n          _getValueAndMessage2 = getValueAndMessage(min), minValue = _getValueAndMessage2.value, minMessage = _getValueAndMessage2.message;\n\n          if (type === 'number' || !type && !isNaN(value)) {\n            valueNumber = valueAsNumber || parseFloat(value);\n\n            if (!isNullOrUndefined(maxValue)) {\n              exceedMax = valueNumber > maxValue;\n            }\n\n            if (!isNullOrUndefined(minValue)) {\n              exceedMin = valueNumber < minValue;\n            }\n          } else {\n            valueDate = valueAsDate || new Date(value);\n\n            if (isString(maxValue)) {\n              exceedMax = valueDate > new Date(maxValue);\n            }\n\n            if (isString(minValue)) {\n              exceedMin = valueDate < new Date(minValue);\n            }\n          }\n\n          if (!(exceedMax || exceedMin)) {\n            _context2.next = 22;\n            break;\n          }\n\n          getMinMaxMessage(!!exceedMax, maxMessage, minMessage, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n\n          if (validateAllFieldCriteria) {\n            _context2.next = 22;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", error);\n\n        case 22:\n          if (!(isString(value) && !isEmpty && (maxLength || minLength))) {\n            _context2.next = 32;\n            break;\n          }\n\n          _getValueAndMessage3 = getValueAndMessage(maxLength), maxLengthValue = _getValueAndMessage3.value, maxLengthMessage = _getValueAndMessage3.message;\n          _getValueAndMessage4 = getValueAndMessage(minLength), minLengthValue = _getValueAndMessage4.value, minLengthMessage = _getValueAndMessage4.message;\n          inputLength = value.toString().length;\n          _exceedMax = maxLength && inputLength > maxLengthValue;\n          _exceedMin = minLength && inputLength < minLengthValue;\n\n          if (!(_exceedMax || _exceedMin)) {\n            _context2.next = 32;\n            break;\n          }\n\n          getMinMaxMessage(!!_exceedMax, maxLengthMessage, minLengthMessage);\n\n          if (validateAllFieldCriteria) {\n            _context2.next = 32;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", error);\n\n        case 32:\n          if (!(pattern && !isEmpty)) {\n            _context2.next = 38;\n            break;\n          }\n\n          _getValueAndMessage5 = getValueAndMessage(pattern), patternValue = _getValueAndMessage5.value, patternMessage = _getValueAndMessage5.message;\n\n          if (!(isRegex(patternValue) && !patternValue.test(value))) {\n            _context2.next = 38;\n            break;\n          }\n\n          error[name] = Object.assign({\n            type: INPUT_VALIDATION_RULES.pattern,\n            message: patternMessage,\n            ref: ref\n          }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage));\n\n          if (validateAllFieldCriteria) {\n            _context2.next = 38;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", error);\n\n        case 38:\n          if (!validate) {\n            _context2.next = 61;\n            break;\n          }\n\n          fieldValue = getFieldValue(fields, ref);\n          validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n          if (!isFunction(validate)) {\n            _context2.next = 52;\n            break;\n          }\n\n          _context2.next = 44;\n          return _regeneratorRuntime.awrap(validate(fieldValue));\n\n        case 44:\n          result = _context2.sent;\n          validateError = getValidateError(result, validateRef);\n\n          if (!validateError) {\n            _context2.next = 50;\n            break;\n          }\n\n          error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n\n          if (validateAllFieldCriteria) {\n            _context2.next = 50;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", error);\n\n        case 50:\n          _context2.next = 61;\n          break;\n\n        case 52:\n          if (!isObject(validate)) {\n            _context2.next = 61;\n            break;\n          }\n\n          validateFunctions = Object.entries(validate);\n          _context2.next = 56;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n            validateFunctions.reduce(function _callee(previous, _ref13, index) {\n              var _ref14, key, validate, result, validateResult, validateError;\n\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _ref14 = _slicedToArray(_ref13, 2), key = _ref14[0], validate = _ref14[1];\n                      _context.t2 = isEmptyObject;\n                      _context.next = 4;\n                      return _regeneratorRuntime.awrap(previous);\n\n                    case 4:\n                      _context.t3 = _context.sent;\n                      _context.t1 = !(0, _context.t2)(_context.t3);\n\n                      if (!_context.t1) {\n                        _context.next = 8;\n                        break;\n                      }\n\n                      _context.t1 = !validateAllFieldCriteria;\n\n                    case 8:\n                      _context.t0 = _context.t1;\n\n                      if (_context.t0) {\n                        _context.next = 11;\n                        break;\n                      }\n\n                      _context.t0 = !isFunction(validate);\n\n                    case 11:\n                      if (!_context.t0) {\n                        _context.next = 13;\n                        break;\n                      }\n\n                      return _context.abrupt(\"return\", resolve(previous));\n\n                    case 13:\n                      _context.next = 15;\n                      return _regeneratorRuntime.awrap(validate(fieldValue));\n\n                    case 15:\n                      validateResult = _context.sent;\n                      validateError = getValidateError(validateResult, validateRef, key);\n\n                      if (validateError) {\n                        result = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n\n                        if (validateAllFieldCriteria) {\n                          error[name] = result;\n                        }\n                      } else {\n                        result = previous;\n                      }\n\n                      return _context.abrupt(\"return\", validateFunctions.length - 1 === index ? resolve(result) : result);\n\n                    case 19:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            }, {});\n          }));\n\n        case 56:\n          validationResult = _context2.sent;\n\n          if (isEmptyObject(validationResult)) {\n            _context2.next = 61;\n            break;\n          }\n\n          error[name] = Object.assign({\n            ref: validateRef\n          }, validationResult);\n\n          if (validateAllFieldCriteria) {\n            _context2.next = 61;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", error);\n\n        case 61:\n          return _context2.abrupt(\"return\", error);\n\n        case 62:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nvar parseErrorSchema = function parseErrorSchema(error, validateAllFieldCriteria) {\n  return isArray(error.inner) ? error.inner.reduce(function (previous, _ref15) {\n    var path = _ref15.path,\n        message = _ref15.message,\n        type = _ref15.type;\n    return Object.assign(Object.assign({}, previous), previous[path] && validateAllFieldCriteria ? _defineProperty({}, path, appendErrors(path, validateAllFieldCriteria, previous, type, message)) : _defineProperty({}, path, previous[path] || Object.assign({\n      message: message,\n      type: type\n    }, validateAllFieldCriteria ? {\n      types: _defineProperty({}, type, message || true)\n    } : {})));\n  }, {}) : _defineProperty({}, error.path, {\n    message: error.message,\n    type: error.type\n  });\n};\n\nfunction validateWithSchema(validationSchema, validateAllFieldCriteria, data) {\n  return _regeneratorRuntime.async(function validateWithSchema$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(validationSchema.validate(data, {\n            abortEarly: false\n          }));\n\n        case 3:\n          _context3.t0 = _context3.sent;\n          _context3.t1 = {};\n          return _context3.abrupt(\"return\", {\n            values: _context3.t0,\n            errors: _context3.t1\n          });\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t2 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", {\n            values: {},\n            errors: transformToNestObject(parseErrorSchema(_context3.t2, validateAllFieldCriteria))\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n}\n\nvar getDefaultValue = function getDefaultValue(defaultValues, name, defaultValue) {\n  return isUndefined(defaultValues[name]) ? get(defaultValues, name, defaultValue) : defaultValues[name];\n};\n\nfunction flatArray(list) {\n  return list.reduce(function (a, b) {\n    return a.concat(isArray(b) ? flatArray(b) : b);\n  }, []);\n}\n\nvar isPrimitive = function isPrimitive(value) {\n  return isNullOrUndefined(value) || !isObjectType(value);\n};\n\nvar getPath = function getPath(path, values) {\n  var getInnerPath = function getInnerPath(value, key, isObject) {\n    var pathWithIndex = isObject ? \"\".concat(path, \".\").concat(key) : \"\".concat(path, \"[\").concat(key, \"]\");\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return isArray(values) ? values.map(function (value, key) {\n    return getInnerPath(value, key);\n  }) : Object.entries(values).map(function (_ref19) {\n    var _ref20 = _slicedToArray(_ref19, 2),\n        key = _ref20[0],\n        value = _ref20[1];\n\n    return getInnerPath(value, key, true);\n  });\n};\n\nvar getPath$1 = function getPath$1(parentPath, value) {\n  return flatArray(getPath(parentPath, value));\n};\n\nvar assignWatchFields = function assignWatchFields(fieldValues, fieldName, watchFields, combinedDefaultValues) {\n  var value;\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else if (!isUndefined(fieldValues[fieldName])) {\n    watchFields.add(fieldName);\n    value = fieldValues[fieldName];\n  } else {\n    value = get(transformToNestObject(fieldValues), fieldName);\n\n    if (!isUndefined(value)) {\n      getPath$1(fieldName, value).forEach(function (name) {\n        return watchFields.add(name);\n      });\n    }\n  }\n\n  return isUndefined(value) ? isObject(combinedDefaultValues) ? getDefaultValue(combinedDefaultValues, fieldName) : combinedDefaultValues : value;\n};\n\nvar skipValidation = function skipValidation(_ref21) {\n  var hasError = _ref21.hasError,\n      isBlurEvent = _ref21.isBlurEvent,\n      isOnSubmit = _ref21.isOnSubmit,\n      isReValidateOnSubmit = _ref21.isReValidateOnSubmit,\n      isOnBlur = _ref21.isOnBlur,\n      isReValidateOnBlur = _ref21.isReValidateOnBlur,\n      isSubmitted = _ref21.isSubmitted;\n  return isOnSubmit && isReValidateOnSubmit || isOnSubmit && !isSubmitted || isOnBlur && !isBlurEvent && !hasError || isReValidateOnBlur && !isBlurEvent && hasError || isReValidateOnSubmit && isSubmitted;\n};\n\nvar isMatchFieldArrayName = function isMatchFieldArrayName(name, searchName) {\n  return name.startsWith(\"\".concat(searchName, \"[\"));\n};\n\nvar isNameInFieldArray = function isNameInFieldArray(names, name) {\n  return _toConsumableArray(names).reduce(function (prev, current) {\n    return isMatchFieldArrayName(name, current) ? true : prev;\n  }, false);\n};\n\nfunction onDomRemove(element, onDetachCallback) {\n  var observer = new MutationObserver(function () {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar omitObject = function omitObject(obj, key) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  var _a = key,\n      omitted = obj[_a],\n      rest = __rest(obj, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n\n  return rest;\n};\n\nvar unsetObject = function unsetObject(target) {\n  for (var key in target) {\n    var data = target[key];\n    var isArrayObject = isArray(data);\n\n    if ((isObject(data) || isArrayObject) && !data.ref) {\n      unsetObject(data);\n    }\n\n    if (isUndefined(data) || isEmptyObject(data) || isArrayObject && !target[key].filter(Boolean).length) {\n      delete target[key];\n    }\n  }\n\n  return target;\n};\n\nvar unset = function unset(target, paths) {\n  paths.forEach(function (path) {\n    set(target, path, undefined);\n  });\n  return unsetObject(target);\n};\n\nvar modeChecker = function modeChecker(mode) {\n  return {\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange\n  };\n};\n\nvar useRef = React.useRef,\n    useState = React.useState,\n    useCallback = React.useCallback,\n    useEffect = React.useEffect;\n\nfunction useForm() {\n  var _ref22 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref22$mode = _ref22.mode,\n      mode = _ref22$mode === void 0 ? VALIDATION_MODE.onSubmit : _ref22$mode,\n      _ref22$reValidateMode = _ref22.reValidateMode,\n      reValidateMode = _ref22$reValidateMode === void 0 ? VALIDATION_MODE.onChange : _ref22$reValidateMode,\n      validationSchema = _ref22.validationSchema,\n      _ref22$defaultValues = _ref22.defaultValues,\n      defaultValues = _ref22$defaultValues === void 0 ? {} : _ref22$defaultValues,\n      _ref22$submitFocusErr = _ref22.submitFocusError,\n      submitFocusError = _ref22$submitFocusErr === void 0 ? true : _ref22$submitFocusErr,\n      validateCriteriaMode = _ref22.validateCriteriaMode;\n\n  var fieldsRef = useRef({});\n  var validateAllFieldCriteria = validateCriteriaMode === 'all';\n  var errorsRef = useRef({});\n  var touchedFieldsRef = useRef({});\n  var watchFieldsRef = useRef(new Set());\n  var dirtyFieldsRef = useRef(new Set());\n  var fieldsWithValidationRef = useRef(new Set());\n  var validFieldsRef = useRef(new Set());\n  var isValidRef = useRef(true);\n  var defaultRenderValuesRef = useRef({});\n  var defaultValuesRef = useRef(defaultValues);\n  var isUnMount = useRef(false);\n  var isWatchAllRef = useRef(false);\n  var isSubmittedRef = useRef(false);\n  var isDirtyRef = useRef(false);\n  var submitCountRef = useRef(0);\n  var isSubmittingRef = useRef(false);\n  var handleChangeRef = useRef();\n  var resetFieldArrayFunctionRef = useRef({});\n  var fieldArrayNamesRef = useRef(new Set());\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      render = _useState2[1];\n\n  var _useRef$current = useRef(modeChecker(mode)).current,\n      isOnBlur = _useRef$current.isOnBlur,\n      isOnSubmit = _useRef$current.isOnSubmit;\n  var isWindowUndefined = typeof window === UNDEFINED;\n  var isWeb = typeof document !== UNDEFINED && !isWindowUndefined && !isUndefined(window.HTMLElement);\n  var isProxyEnabled = isWeb && 'Proxy' in window;\n  var readFormState = useRef({\n    dirty: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled\n  });\n  var _useRef$current2 = useRef(modeChecker(reValidateMode)).current,\n      isReValidateOnBlur = _useRef$current2.isOnBlur,\n      isReValidateOnSubmit = _useRef$current2.isOnSubmit;\n  defaultValuesRef.current = defaultValuesRef.current ? defaultValuesRef.current : defaultValues;\n  var reRender = useCallback(function () {\n    if (!isUnMount.current) {\n      render({});\n    }\n  }, []);\n  var validateFieldCurry = useCallback(validateField.bind(null, fieldsRef, validateAllFieldCriteria), []);\n  var validateFieldsSchemaCurry = useCallback(validateWithSchema.bind(null, validationSchema, validateAllFieldCriteria), [validationSchema]);\n  var renderBaseOnError = useCallback(function (name, error, shouldRender, skipReRender) {\n    var shouldReRender = shouldRender || shouldUpdateWithError({\n      errors: errorsRef.current,\n      error: error,\n      name: name,\n      validFields: validFieldsRef.current,\n      fieldsWithValidation: fieldsWithValidationRef.current\n    });\n\n    if (isEmptyObject(error)) {\n      if (fieldsWithValidationRef.current.has(name) || validationSchema) {\n        validFieldsRef.current.add(name);\n        shouldReRender = shouldReRender || get(errorsRef.current, name);\n      }\n\n      errorsRef.current = unset(errorsRef.current, [name]);\n    } else {\n      validFieldsRef.current.delete(name);\n      shouldReRender = shouldReRender || !get(errorsRef.current, name);\n      set(errorsRef.current, name, error[name]);\n    }\n\n    if (shouldReRender && !skipReRender) {\n      reRender();\n      return true;\n    }\n  }, [reRender, validationSchema]);\n  var setFieldValue = useCallback(function (name, rawValue) {\n    var field = fieldsRef.current[name];\n\n    if (!field) {\n      return false;\n    }\n\n    var ref = field.ref;\n    var type = ref.type;\n    var options = field.options;\n    var value = isWeb && ref instanceof window.HTMLElement && isNullOrUndefined(rawValue) ? '' : rawValue;\n\n    if (isRadioInput(type) && options) {\n      options.forEach(function (_ref23) {\n        var radioRef = _ref23.ref;\n        return radioRef.checked = radioRef.value === value;\n      });\n    } else if (isFileInput(type)) {\n      if (value instanceof FileList || value === '') {\n        ref.files = value;\n      } else {\n        ref.value = value;\n      }\n    } else if (isMultipleSelect(type)) {\n      _toConsumableArray(ref.options).forEach(function (selectRef) {\n        return selectRef.selected = value.includes(selectRef.value);\n      });\n    } else if (isCheckBoxInput(type) && options) {\n      options.length > 1 ? options.forEach(function (_ref24) {\n        var checkboxRef = _ref24.ref;\n        return checkboxRef.checked = value.includes(checkboxRef.value);\n      }) : options[0].ref.checked = !!value;\n    } else {\n      ref.value = value;\n    }\n\n    return type;\n  }, [isWeb]);\n\n  var setDirty = function setDirty(name) {\n    if (!fieldsRef.current[name]) {\n      return false;\n    }\n\n    var isDirty = defaultRenderValuesRef.current[name] !== getFieldValue(fieldsRef.current, fieldsRef.current[name].ref);\n    var isDirtyChanged = dirtyFieldsRef.current.has(name) !== isDirty;\n\n    if (isDirty) {\n      dirtyFieldsRef.current.add(name);\n    } else {\n      dirtyFieldsRef.current.delete(name);\n    }\n\n    isDirtyRef.current = !!dirtyFieldsRef.current.size;\n    return isDirtyChanged && readFormState.current.dirty;\n  };\n\n  var setInternalValue = useCallback(function (name, value) {\n    setFieldValue(name, value);\n\n    if (setDirty(name) || !get(touchedFieldsRef.current, name) && readFormState.current.touched) {\n      return !!set(touchedFieldsRef.current, name, true);\n    }\n  }, [setFieldValue]);\n  var executeValidation = useCallback(function _callee2(name, shouldRender, skipReRender) {\n    var field, error;\n    return _regeneratorRuntime.async(function _callee2$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            field = fieldsRef.current[name];\n\n            if (field) {\n              _context4.next = 3;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", false);\n\n          case 3:\n            if (shouldRender) {\n              reRender();\n            }\n\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(validateField(fieldsRef, validateAllFieldCriteria, field));\n\n          case 6:\n            error = _context4.sent;\n            renderBaseOnError(name, error, false, skipReRender);\n            return _context4.abrupt(\"return\", isEmptyObject(error));\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }, [reRender, renderBaseOnError, validateAllFieldCriteria]);\n  var executeSchemaValidation = useCallback(function _callee3(payload, shouldRender) {\n    var _ref25, errors, previousFormIsValid, fieldName, _error;\n\n    return _regeneratorRuntime.async(function _callee3$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(getFieldsValues(fieldsRef.current))));\n\n          case 2:\n            _ref25 = _context5.sent;\n            errors = _ref25.errors;\n            previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            if (isArray(payload)) {\n              payload.forEach(function (name) {\n                if (errors[name]) {\n                  set(errorsRef.current, name, errors[name]);\n                } else {\n                  unset(errorsRef.current, [name]);\n                }\n              });\n              reRender();\n            } else {\n              fieldName = payload;\n              _error = get(errors, fieldName) ? _defineProperty({}, fieldName, get(errors, fieldName)) : {};\n              renderBaseOnError(fieldName, _error, shouldRender || previousFormIsValid !== isValidRef.current);\n            }\n\n            return _context5.abrupt(\"return\", isEmptyObject(errorsRef.current));\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }, [reRender, renderBaseOnError, validateAllFieldCriteria, validationSchema]);\n  var triggerValidation = useCallback(function _callee5(payload, shouldRender) {\n    var fields, result;\n    return _regeneratorRuntime.async(function _callee5$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            fields = payload || Object.keys(fieldsRef.current);\n\n            if (!validationSchema) {\n              _context7.next = 3;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", executeSchemaValidation(fields, shouldRender));\n\n          case 3:\n            if (!isArray(fields)) {\n              _context7.next = 9;\n              break;\n            }\n\n            _context7.next = 6;\n            return _regeneratorRuntime.awrap(Promise.all(fields.map(function _callee4(data) {\n              return _regeneratorRuntime.async(function _callee4$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      _context6.next = 2;\n                      return _regeneratorRuntime.awrap(executeValidation(data, false, true));\n\n                    case 2:\n                      return _context6.abrupt(\"return\", _context6.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              });\n            })));\n\n          case 6:\n            result = _context7.sent;\n            reRender();\n            return _context7.abrupt(\"return\", result.every(Boolean));\n\n          case 9:\n            _context7.next = 11;\n            return _regeneratorRuntime.awrap(executeValidation(fields, shouldRender));\n\n          case 11:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  }, [executeSchemaValidation, executeValidation, reRender, validationSchema]);\n  var setValue = useCallback(function (name, value, shouldValidate) {\n    var shouldRender = setInternalValue(name, value) || isWatchAllRef.current || watchFieldsRef.current.has(name);\n\n    if (shouldValidate) {\n      return triggerValidation(name, shouldRender);\n    }\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    return;\n  }, [reRender, setInternalValue, triggerValidation]);\n  handleChangeRef.current = handleChangeRef.current ? handleChangeRef.current : function _callee6(_ref27) {\n    var type, target, name, fields, errors, field, currentError, error, isBlurEvent, shouldSkipValidation, shouldUpdateDirty, shouldUpdateState, _ref28, _errors, validForm;\n\n    return _regeneratorRuntime.async(function _callee6$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            type = _ref27.type, target = _ref27.target;\n            name = target ? target.name : '';\n            fields = fieldsRef.current;\n            errors = errorsRef.current;\n            field = fields[name];\n            currentError = get(errors, name);\n\n            if (field) {\n              _context8.next = 8;\n              break;\n            }\n\n            return _context8.abrupt(\"return\");\n\n          case 8:\n            isBlurEvent = type === EVENTS.BLUR;\n            shouldSkipValidation = skipValidation({\n              hasError: !!currentError,\n              isBlurEvent: isBlurEvent,\n              isOnSubmit: isOnSubmit,\n              isReValidateOnSubmit: isReValidateOnSubmit,\n              isOnBlur: isOnBlur,\n              isReValidateOnBlur: isReValidateOnBlur,\n              isSubmitted: isSubmittedRef.current\n            });\n            shouldUpdateDirty = setDirty(name);\n            shouldUpdateState = isWatchAllRef.current || watchFieldsRef.current.has(name) || shouldUpdateDirty;\n\n            if (isBlurEvent && !get(touchedFieldsRef.current, name) && readFormState.current.touched) {\n              set(touchedFieldsRef.current, name, true);\n              shouldUpdateState = true;\n            }\n\n            if (!shouldSkipValidation) {\n              _context8.next = 15;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", shouldUpdateState && reRender());\n\n          case 15:\n            if (!validationSchema) {\n              _context8.next = 26;\n              break;\n            }\n\n            _context8.next = 18;\n            return _regeneratorRuntime.awrap(validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(getFieldsValues(fields))));\n\n          case 18:\n            _ref28 = _context8.sent;\n            _errors = _ref28.errors;\n            validForm = isEmptyObject(_errors);\n            error = get(_errors, name) ? _defineProperty({}, name, get(_errors, name)) : {};\n\n            if (isValidRef.current !== validForm) {\n              shouldUpdateState = true;\n            }\n\n            isValidRef.current = validForm;\n            _context8.next = 29;\n            break;\n\n          case 26:\n            _context8.next = 28;\n            return _regeneratorRuntime.awrap(validateField(fieldsRef, validateAllFieldCriteria, field));\n\n          case 28:\n            error = _context8.sent;\n\n          case 29:\n            if (!renderBaseOnError(name, error) && shouldUpdateState) {\n              reRender();\n            }\n\n          case 30:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    });\n  };\n  var validateSchemaIsValid = useCallback(function () {\n    var fieldValues = isEmptyObject(defaultValuesRef.current) ? getFieldsValues(fieldsRef.current) : defaultValuesRef.current;\n    validateFieldsSchemaCurry(transformToNestObject(fieldValues)).then(function (_ref30) {\n      var errors = _ref30.errors;\n      var previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (previousFormIsValid && previousFormIsValid !== isValidRef.current) {\n        reRender();\n      }\n    });\n  }, [reRender, validateFieldsSchemaCurry]);\n  var resetFieldRef = useCallback(function (name) {\n    errorsRef.current = unset(errorsRef.current, [name]);\n    touchedFieldsRef.current = unset(touchedFieldsRef.current, [name]);\n    fieldsRef.current = omitObject(fieldsRef.current, name);\n    defaultRenderValuesRef.current = omitObject(defaultRenderValuesRef.current, name);\n    [dirtyFieldsRef, fieldsWithValidationRef, validFieldsRef, watchFieldsRef].forEach(function (data) {\n      return data.current.delete(name);\n    });\n\n    if (readFormState.current.isValid || readFormState.current.touched) {\n      reRender();\n    }\n\n    if (validationSchema) {\n      validateSchemaIsValid();\n    }\n  }, [reRender]);\n  var removeEventListenerAndRef = useCallback(function (field, forceDelete) {\n    if (!field) {\n      return;\n    }\n\n    if (!isUndefined(handleChangeRef.current)) {\n      findRemovedFieldAndRemoveListener(fieldsRef.current, handleChangeRef.current, field, forceDelete);\n    }\n\n    resetFieldRef(field.ref.name);\n  }, [resetFieldRef]);\n\n  function clearError(name) {\n    if (isUndefined(name)) {\n      errorsRef.current = {};\n    } else {\n      (isArray(name) ? name : [name]).forEach(function (fieldName) {\n        return errorsRef.current = omitObject(errorsRef.current, fieldName);\n      });\n    }\n\n    reRender();\n  }\n\n  var setInternalError = function setInternalError(_ref31) {\n    var name = _ref31.name,\n        type = _ref31.type,\n        types = _ref31.types,\n        message = _ref31.message,\n        preventRender = _ref31.preventRender;\n    var field = fieldsRef.current[name];\n\n    if (!isSameError(errorsRef.current[name], type, message)) {\n      set(errorsRef.current, name, {\n        type: type,\n        types: types,\n        message: message,\n        ref: field ? field.ref : {},\n        isManual: true\n      });\n\n      if (!preventRender) {\n        reRender();\n      }\n    }\n  };\n\n  function setError(name) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var message = arguments.length > 2 ? arguments[2] : undefined;\n\n    if (isString(name)) {\n      setInternalError(Object.assign({\n        name: name\n      }, isObject(type) ? {\n        types: type,\n        type: ''\n      } : {\n        type: type,\n        message: message\n      }));\n    } else if (isArray(name)) {\n      name.forEach(function (error) {\n        return setInternalError(Object.assign(Object.assign({}, error), {\n          preventRender: true\n        }));\n      });\n      reRender();\n    }\n  }\n\n  function watch(fieldNames, defaultValue) {\n    var combinedDefaultValues = isUndefined(defaultValue) ? isUndefined(defaultValuesRef.current) ? {} : defaultValuesRef.current : defaultValue;\n    var fieldValues = getFieldsValues(fieldsRef.current);\n    var watchFields = watchFieldsRef.current;\n\n    if (isProxyEnabled) {\n      readFormState.current.dirty = true;\n    }\n\n    if (isString(fieldNames)) {\n      return assignWatchFields(fieldValues, fieldNames, watchFields, combinedDefaultValues);\n    }\n\n    if (isArray(fieldNames)) {\n      return fieldNames.reduce(function (previous, name) {\n        var value;\n\n        if (isEmptyObject(fieldsRef.current) && isObject(combinedDefaultValues)) {\n          value = getDefaultValue(combinedDefaultValues, name);\n        } else {\n          value = assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues);\n        }\n\n        return Object.assign(Object.assign({}, previous), _defineProperty({}, name, value));\n      }, {});\n    }\n\n    isWatchAllRef.current = true;\n    var result = !isEmptyObject(fieldValues) && fieldValues || defaultValue || defaultValuesRef.current;\n    return fieldNames && fieldNames.nest ? transformToNestObject(result) : result;\n  }\n\n  function unregister(names) {\n    if (!isEmptyObject(fieldsRef.current)) {\n      (isArray(names) ? names : [names]).forEach(function (fieldName) {\n        return removeEventListenerAndRef(fieldsRef.current[fieldName], true);\n      });\n    }\n  }\n\n  function registerFieldsRef(ref) {\n    var validateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!ref.name) {\n      return console.warn('Missing name @', ref);\n    }\n\n    var name = ref.name,\n        type = ref.type,\n        value = ref.value;\n    var fieldAttributes = Object.assign({\n      ref: ref\n    }, validateOptions);\n    var fields = fieldsRef.current;\n    var isRadioOrCheckbox = isRadioInput(type) || isCheckBoxInput(type);\n    var currentField = fields[name];\n\n    if (isRadioOrCheckbox ? currentField && isArray(currentField.options) && currentField.options.find(function (_ref32) {\n      var ref = _ref32.ref;\n      return value === ref.value;\n    }) : currentField) {\n      fields[name] = Object.assign(Object.assign({}, currentField), validateOptions);\n      return;\n    }\n\n    if (type) {\n      var mutationWatcher = onDomRemove(ref, function () {\n        return removeEventListenerAndRef(fieldAttributes);\n      });\n\n      if (isRadioOrCheckbox) {\n        currentField = Object.assign({\n          options: [].concat(_toConsumableArray(currentField && currentField.options || []), [{\n            ref: ref,\n            mutationWatcher: mutationWatcher\n          }]),\n          ref: {\n            type: type,\n            name: name\n          }\n        }, validateOptions);\n      } else {\n        currentField = Object.assign(Object.assign({}, fieldAttributes), {\n          mutationWatcher: mutationWatcher\n        });\n      }\n    } else {\n      currentField = fieldAttributes;\n    }\n\n    fields[name] = currentField;\n\n    if (!isEmptyObject(defaultValuesRef.current)) {\n      var defaultValue = getDefaultValue(defaultValuesRef.current, name);\n\n      if (!isUndefined(defaultValue) && !isNameInFieldArray(fieldArrayNamesRef.current, name)) {\n        setFieldValue(name, defaultValue);\n      }\n    }\n\n    if (validationSchema && readFormState.current.isValid) {\n      validateSchemaIsValid();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormState.current.isValid) {\n        validateFieldCurry(currentField).then(function (error) {\n          var previousFormIsValid = isValidRef.current;\n\n          if (isEmptyObject(error)) {\n            validFieldsRef.current.add(name);\n          } else {\n            isValidRef.current = false;\n          }\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (!defaultRenderValuesRef.current[name]) {\n      defaultRenderValuesRef.current[name] = getFieldValue(fields, currentField.ref);\n    }\n\n    if (!type) {\n      return;\n    }\n\n    var fieldToAttachListener = isRadioOrCheckbox && currentField.options ? currentField.options[currentField.options.length - 1] : currentField;\n    attachEventListeners({\n      field: fieldToAttachListener,\n      isRadioOrCheckbox: isRadioOrCheckbox,\n      handleChange: handleChangeRef.current\n    });\n  }\n\n  function register(refOrValidationOptions, validationOptions) {\n    if (isWindowUndefined || !refOrValidationOptions) {\n      return;\n    }\n\n    if (isString(refOrValidationOptions)) {\n      registerFieldsRef({\n        name: refOrValidationOptions\n      }, validationOptions);\n      return;\n    }\n\n    if (isObject(refOrValidationOptions) && 'name' in refOrValidationOptions) {\n      registerFieldsRef(refOrValidationOptions, validationOptions);\n      return;\n    }\n\n    return function (ref) {\n      return ref && registerFieldsRef(ref, refOrValidationOptions);\n    };\n  }\n\n  var handleSubmit = useCallback(function (callback) {\n    return function _callee8(e) {\n      var fieldErrors, fieldValues, fields, _ref33, errors, values, _ref34, _errors2, _values, key, field;\n\n      return _regeneratorRuntime.async(function _callee8$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (e) {\n                e.preventDefault();\n                e.persist();\n              }\n\n              fields = fieldsRef.current;\n\n              if (readFormState.current.isSubmitting) {\n                isSubmittingRef.current = true;\n                reRender();\n              }\n\n              _context10.prev = 3;\n\n              if (!validationSchema) {\n                _context10.next = 16;\n                break;\n              }\n\n              fieldValues = getFieldsValues(fields);\n              _context10.next = 8;\n              return _regeneratorRuntime.awrap(validateFieldsSchemaCurry(transformToNestObject(fieldValues)));\n\n            case 8:\n              _ref33 = _context10.sent;\n              errors = _ref33.errors;\n              values = _ref33.values;\n              errorsRef.current = errors;\n              fieldErrors = errors;\n              fieldValues = values;\n              _context10.next = 23;\n              break;\n\n            case 16:\n              _context10.next = 18;\n              return _regeneratorRuntime.awrap(Object.values(fields).reduce(function _callee7(previous, field) {\n                var resolvedPrevious, ref, name, fieldError;\n                return _regeneratorRuntime.async(function _callee7$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        if (field) {\n                          _context9.next = 2;\n                          break;\n                        }\n\n                        return _context9.abrupt(\"return\", previous);\n\n                      case 2:\n                        _context9.next = 4;\n                        return _regeneratorRuntime.awrap(previous);\n\n                      case 4:\n                        resolvedPrevious = _context9.sent;\n                        ref = field.ref, name = field.ref.name;\n\n                        if (fields[name]) {\n                          _context9.next = 8;\n                          break;\n                        }\n\n                        return _context9.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                      case 8:\n                        _context9.next = 10;\n                        return _regeneratorRuntime.awrap(validateFieldCurry(field));\n\n                      case 10:\n                        fieldError = _context9.sent;\n\n                        if (!fieldError[name]) {\n                          _context9.next = 15;\n                          break;\n                        }\n\n                        set(resolvedPrevious.errors, name, fieldError[name]);\n                        validFieldsRef.current.delete(name);\n                        return _context9.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                      case 15:\n                        if (fieldsWithValidationRef.current.has(name)) {\n                          validFieldsRef.current.add(name);\n                        }\n\n                        resolvedPrevious.values[name] = getFieldValue(fields, ref);\n                        return _context9.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                      case 18:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                });\n              }, Promise.resolve({\n                errors: {},\n                values: {}\n              })));\n\n            case 18:\n              _ref34 = _context10.sent;\n              _errors2 = _ref34.errors;\n              _values = _ref34.values;\n              fieldErrors = _errors2;\n              fieldValues = _values;\n\n            case 23:\n              if (!isEmptyObject(fieldErrors)) {\n                _context10.next = 29;\n                break;\n              }\n\n              errorsRef.current = {};\n              _context10.next = 27;\n              return _regeneratorRuntime.awrap(callback(transformToNestObject(fieldValues), e));\n\n            case 27:\n              _context10.next = 47;\n              break;\n\n            case 29:\n              if (!submitFocusError) {\n                _context10.next = 46;\n                break;\n              }\n\n              _context10.t0 = _regeneratorRuntime.keys(fieldsRef.current);\n\n            case 31:\n              if ((_context10.t1 = _context10.t0()).done) {\n                _context10.next = 46;\n                break;\n              }\n\n              key = _context10.t1.value;\n\n              if (!get(fieldErrors, key)) {\n                _context10.next = 44;\n                break;\n              }\n\n              field = fieldsRef.current[key];\n\n              if (!field) {\n                _context10.next = 44;\n                break;\n              }\n\n              if (!field.ref.focus) {\n                _context10.next = 41;\n                break;\n              }\n\n              field.ref.focus();\n              return _context10.abrupt(\"break\", 46);\n\n            case 41:\n              if (!field.options) {\n                _context10.next = 44;\n                break;\n              }\n\n              field.options[0].ref.focus();\n              return _context10.abrupt(\"break\", 46);\n\n            case 44:\n              _context10.next = 31;\n              break;\n\n            case 46:\n              errorsRef.current = fieldErrors;\n\n            case 47:\n              _context10.prev = 47;\n              isSubmittedRef.current = true;\n              isSubmittingRef.current = false;\n              submitCountRef.current = submitCountRef.current + 1;\n              reRender();\n              return _context10.finish(47);\n\n            case 53:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, [[3,, 47, 53]]);\n    };\n  }, [reRender, submitFocusError, validateFieldCurry, validateFieldsSchemaCurry, validationSchema]);\n\n  var resetRefs = function resetRefs() {\n    errorsRef.current = {};\n    fieldsRef.current = {};\n    touchedFieldsRef.current = {};\n    validFieldsRef.current = new Set();\n    fieldsWithValidationRef.current = new Set();\n    defaultRenderValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    dirtyFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n    isSubmittedRef.current = false;\n    isDirtyRef.current = false;\n    isValidRef.current = true;\n    submitCountRef.current = 0;\n  };\n\n  var reset = function reset(values) {\n    for (var _i = 0, _Object$values = Object.values(fieldsRef.current); _i < _Object$values.length; _i++) {\n      var value = _Object$values[_i];\n\n      if (value && value.ref && value.ref.closest) {\n        try {\n          value.ref.closest('form').reset();\n          break;\n        } catch (_a) {}\n      }\n    }\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(function (resetFieldArray) {\n      return isFunction(resetFieldArray) && resetFieldArray(values);\n    });\n    resetRefs();\n\n    if (values) {\n      defaultValuesRef.current = values;\n    }\n\n    reRender();\n  };\n\n  var getValues = function getValues(payload) {\n    var fieldValues = getFieldsValues(fieldsRef.current);\n    var outputValues = isEmptyObject(fieldValues) ? defaultValuesRef.current : fieldValues;\n    return payload && payload.nest ? transformToNestObject(outputValues) : outputValues;\n  };\n\n  useEffect(function () {\n    return function () {\n      isUnMount.current = true;\n      fieldsRef.current && Object.values(fieldsRef.current).forEach(function (field) {\n        return removeEventListenerAndRef(field, true);\n      });\n    };\n  }, [removeEventListenerAndRef]);\n\n  if (!validationSchema) {\n    isValidRef.current = validFieldsRef.current.size >= fieldsWithValidationRef.current.size && isEmptyObject(errorsRef.current);\n  }\n\n  var formState = {\n    dirty: isDirtyRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit ? isSubmittedRef.current && isEmptyObject(errorsRef.current) : isEmptyObject(fieldsRef.current) || isValidRef.current\n  };\n  var control = {\n    register: register,\n    unregister: unregister,\n    setValue: setValue,\n    formState: formState,\n    mode: {\n      isOnBlur: isOnBlur,\n      isOnSubmit: isOnSubmit\n    },\n    reValidateMode: {\n      isReValidateOnBlur: isReValidateOnBlur,\n      isReValidateOnSubmit: isReValidateOnSubmit\n    },\n    errors: errorsRef.current,\n    fieldsRef: fieldsRef,\n    resetFieldArrayFunctionRef: resetFieldArrayFunctionRef,\n    fieldArrayNamesRef: fieldArrayNamesRef,\n    isDirtyRef: isDirtyRef,\n    defaultValuesRef: defaultValuesRef\n  };\n  return {\n    watch: watch,\n    control: control,\n    handleSubmit: handleSubmit,\n    setValue: setValue,\n    triggerValidation: triggerValidation,\n    getValues: useCallback(getValues, []),\n    reset: useCallback(reset, [reRender]),\n    register: useCallback(register, [defaultRenderValuesRef.current, defaultValuesRef.current]),\n    unregister: useCallback(unregister, [removeEventListenerAndRef]),\n    clearError: useCallback(clearError, []),\n    setError: useCallback(setError, []),\n    errors: errorsRef.current,\n    formState: isProxyEnabled ? new Proxy(formState, {\n      get: function get(obj, prop) {\n        if (prop in obj) {\n          readFormState.current[prop] = true;\n          return obj[prop];\n        }\n\n        return {};\n      }\n    }) : formState\n  };\n}\n\nvar FormGlobalContext = createContext(null);\n\nfunction useFormContext() {\n  return useContext(FormGlobalContext);\n}\n\nfunction FormContext(_a) {\n  var children = _a.children,\n      formState = _a.formState,\n      errors = _a.errors,\n      restMethods = __rest(_a, [\"children\", \"formState\", \"errors\"]);\n\n  return createElement(FormGlobalContext.Provider, {\n    value: Object.assign(Object.assign({}, restMethods), {\n      formState: formState,\n      errors: errors\n    })\n  }, children);\n}\n\nvar generateId = function generateId() {\n  var d = performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\n\nvar appendId = function appendId(value) {\n  return Object.assign(Object.assign({}, value), {\n    id: generateId()\n  });\n};\n\nvar mapIds = function mapIds(data) {\n  return (isArray(data) ? data : []).map(function (value) {\n    return appendId(value);\n  });\n};\n\nfunction getIsFieldsDifferent(referenceArray, differenceArray) {\n  var isMatch = false;\n\n  if (referenceArray.length !== differenceArray.length) {\n    return true;\n  }\n\n  for (var i = 0; i < referenceArray.length; i++) {\n    if (isMatch) {\n      break;\n    }\n\n    var _a = referenceArray[i],\n        data = __rest(_a, [\"id\"]);\n\n    if (!differenceArray[i] || Object.keys(data).length !== Object.keys(differenceArray[i]).length) {\n      isMatch = true;\n      break;\n    }\n\n    for (var key in data) {\n      if (!differenceArray[i][key] || data[key] !== differenceArray[i][key]) {\n        isMatch = true;\n        break;\n      }\n    }\n  }\n\n  return isMatch;\n}\n\nfunction useFieldArray(_ref35) {\n  var control = _ref35.control,\n      name = _ref35.name;\n  var methods = useFormContext();\n\n  var _ref36 = control || methods.control,\n      resetFieldArrayFunctionRef = _ref36.resetFieldArrayFunctionRef,\n      fieldArrayNamesRef = _ref36.fieldArrayNamesRef,\n      fieldsRef = _ref36.fieldsRef,\n      defaultValuesRef = _ref36.defaultValuesRef,\n      unregister = _ref36.unregister,\n      isDirtyRef = _ref36.isDirtyRef;\n\n  var memoizedDefaultValues = useMemo(function () {\n    return get(defaultValuesRef.current, name, []);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name]);\n\n  var _useState$ = useState$1(mapIds(memoizedDefaultValues)),\n      _useState$2 = _slicedToArray(_useState$, 2),\n      fields = _useState$2[0],\n      setField = _useState$2[1];\n\n  var resetFields = function resetFields(flagOrFields) {\n    isDirtyRef.current = isUndefined(flagOrFields) ? true : getIsFieldsDifferent(flagOrFields, memoizedDefaultValues);\n\n    for (var key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name)) {\n        unregister(key);\n      }\n    }\n  };\n\n  var append = function append(value) {\n    isDirtyRef.current = true;\n    setField([].concat(_toConsumableArray(fields), [appendId(value)]));\n  };\n\n  var prepend = function prepend(value) {\n    resetFields();\n    setField(mapIds([appendId(value)].concat(_toConsumableArray(fields))));\n  };\n\n  var remove = function remove(index) {\n    var data = isUndefined(index) ? [] : [].concat(_toConsumableArray(fields.slice(0, index)), _toConsumableArray(fields.slice(index + 1)));\n    resetFields(data);\n    setField(mapIds(data));\n  };\n\n  var insert = function insert(index, value) {\n    resetFields();\n    setField(mapIds([].concat(_toConsumableArray(fields.slice(0, index)), [appendId(value)], _toConsumableArray(fields.slice(index)))));\n  };\n\n  var swap = function swap(indexA, indexB) {\n    var _ref37 = [fields[indexB], fields[indexA]];\n    fields[indexA] = _ref37[0];\n    fields[indexB] = _ref37[1];\n    resetFields(fields);\n    setField(mapIds(_toConsumableArray(fields)));\n  };\n\n  var move = function move(from, to) {\n    fields.splice(to, 0, fields.splice(from, 1)[0]);\n    resetFields(fields);\n    setField(mapIds(_toConsumableArray(fields)));\n  };\n\n  var reset = function reset(values) {\n    resetFields();\n    setField(mapIds(get(values, name)));\n  };\n\n  useEffect$1(function () {\n    var resetFunctions = resetFieldArrayFunctionRef.current;\n    var fieldArrayNames = fieldArrayNamesRef.current;\n    fieldArrayNames.add(name);\n    resetFunctions[name] = reset;\n    return function () {\n      resetFields();\n      delete resetFunctions[name];\n      fieldArrayNames.delete(name);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [name]);\n  return {\n    swap: swap,\n    move: move,\n    prepend: prepend,\n    append: append,\n    remove: remove,\n    insert: insert,\n    fields: fields\n  };\n}\n\nvar getInputValue = function getInputValue(target, isCheckbox) {\n  if (isNullOrUndefined(target)) {\n    return target;\n  }\n\n  return isCheckbox ? isUndefined(target.checked) ? target : target.checked : isUndefined(target.value) ? target : target.value;\n};\n\nvar Controller = function Controller(_a) {\n  var name = _a.name,\n      rules = _a.rules,\n      InnerComponent = _a.as,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      _a$onChangeName = _a.onChangeName,\n      onChangeName = _a$onChangeName === void 0 ? VALIDATION_MODE.onChange : _a$onChangeName,\n      _a$onBlurName = _a.onBlurName,\n      onBlurName = _a$onBlurName === void 0 ? VALIDATION_MODE.onBlur : _a$onBlurName,\n      valueName = _a.valueName,\n      defaultValue = _a.defaultValue,\n      control = _a.control,\n      rest = __rest(_a, [\"name\", \"rules\", \"as\", \"onChange\", \"onBlur\", \"onChangeName\", \"onBlurName\", \"valueName\", \"defaultValue\", \"control\"]);\n\n  var methods = useFormContext();\n\n  var _ref38 = control || methods.control,\n      defaultValuesRef = _ref38.defaultValuesRef,\n      setValue = _ref38.setValue,\n      register = _ref38.register,\n      unregister = _ref38.unregister,\n      errors = _ref38.errors,\n      _ref38$mode = _ref38.mode,\n      isOnSubmit = _ref38$mode.isOnSubmit,\n      isOnBlur = _ref38$mode.isOnBlur,\n      _ref38$reValidateMode = _ref38.reValidateMode,\n      isReValidateOnBlur = _ref38$reValidateMode.isReValidateOnBlur,\n      isReValidateOnSubmit = _ref38$reValidateMode.isReValidateOnSubmit,\n      isSubmitted = _ref38.formState.isSubmitted,\n      fieldsRef = _ref38.fieldsRef,\n      fieldArrayNamesRef = _ref38.fieldArrayNamesRef;\n\n  var _useState$3 = useState$1(isUndefined(defaultValue) ? get(defaultValuesRef.current, name) : defaultValue),\n      _useState$4 = _slicedToArray(_useState$3, 2),\n      value = _useState$4[0],\n      setInputStateValue = _useState$4[1];\n\n  var valueRef = useRef$1(value);\n  var isCheckboxInput = isBoolean(value);\n\n  var shouldValidate = function shouldValidate(isBlurEvent) {\n    return !skipValidation({\n      hasError: !!errors[name],\n      isBlurEvent: isBlurEvent,\n      isOnBlur: isOnBlur,\n      isOnSubmit: isOnSubmit,\n      isReValidateOnBlur: isReValidateOnBlur,\n      isReValidateOnSubmit: isReValidateOnSubmit,\n      isSubmitted: isSubmitted\n    });\n  };\n\n  var commonTask = function commonTask(target) {\n    var data = getInputValue(target, isCheckboxInput);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  var eventWrapper = function eventWrapper(event, eventName) {\n    return function () {\n      for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {\n        arg[_key] = arguments[_key];\n      }\n\n      var data = commonTask(event(arg));\n      var isBlurEvent = eventName === EVENTS.BLUR;\n      setValue(name, data, shouldValidate(isBlurEvent));\n    };\n  };\n\n  var handleChange = function handleChange(e) {\n    var data = commonTask(e && e.target ? e.target : e);\n    setValue(name, data, shouldValidate());\n  };\n\n  var handleBlur = function handleBlur(e) {\n    var data = commonTask(e && e.target ? e.target : e);\n    setValue(name, data, shouldValidate(true));\n  };\n\n  var registerField = function registerField() {\n    return register(Object.defineProperty({\n      name: name\n    }, VALUE, {\n      set: function set(data) {\n        setInputStateValue(data);\n        valueRef.current = data;\n      },\n      get: function get() {\n        return valueRef.current;\n      }\n    }), Object.assign({}, rules));\n  };\n\n  if (!fieldsRef.current[name]) {\n    registerField();\n  }\n\n  useEffect$1(function () {\n    var fieldArrayNames = fieldArrayNamesRef.current;\n    registerField();\n    return function () {\n      if (!isNameInFieldArray(fieldArrayNames, name)) {\n        unregister(name);\n      }\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name]);\n  var props = Object.assign(Object.assign(Object.assign(Object.assign({\n    name: name\n  }, rest), onChange ? _defineProperty({}, onChangeName, eventWrapper(onChange, EVENTS.CHANGE)) : _defineProperty({}, onChangeName, handleChange)), isOnBlur || isReValidateOnBlur ? onBlur ? _defineProperty({}, onBlurName, eventWrapper(onBlur, EVENTS.BLUR)) : _defineProperty({}, onBlurName, handleBlur) : {}), _defineProperty({}, valueName || (isCheckboxInput ? 'checked' : VALUE), value));\n  return isValidElement(InnerComponent) ? cloneElement(InnerComponent, props) : createElement(InnerComponent, Object.assign({}, props));\n};\n\nvar ErrorMessage = function ErrorMessage(_ref43) {\n  var InnerComponent = _ref43.as,\n      errors = _ref43.errors,\n      name = _ref43.name,\n      children = _ref43.children;\n  var methods = useFormContext();\n\n  var _get = get(errors || methods.errors, name, {}),\n      message = _get.message,\n      types = _get.types;\n\n  if (!message) {\n    return null;\n  }\n\n  var props = {\n    children: children ? children({\n      message: message,\n      messages: types\n    }) : message\n  };\n  return InnerComponent ? isValidElement(InnerComponent) ? cloneElement(InnerComponent, props) : createElement(InnerComponent, Object.assign({}, props)) : createElement(Fragment, Object.assign({}, props));\n};\n\nexport { Controller, ErrorMessage, FormContext, useFieldArray, useForm, useFormContext };","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/node_modules/react-hook-form/dist/react-hook-form.es.js"],"names":["React","createContext","useContext","createElement","useMemo","useState","useState$1","useEffect","useEffect$1","useRef","useRef$1","isValidElement","cloneElement","Fragment","VALIDATION_MODE","onBlur","onChange","onSubmit","RADIO_INPUT","FILE_INPUT","VALUE","UNDEFINED","EVENTS","BLUR","CHANGE","INPUT","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","REGEX_IS_DEEP_PROP","REGEX_IS_PLAIN_PROP","REGEX_PROP_NAME","REGEX_ESCAPE_CHAR","attachEventListeners","field","handleChange","isRadioOrCheckbox","ref","addEventListener","isUndefined","val","undefined","isNullOrUndefined","value","isArray","Array","isObjectType","isObject","isKey","test","stringToPath","string","result","replace","match","number","quote","push","set","object","path","index","tempPath","length","lastIndex","key","newValue","objValue","isNaN","transformToNestObject","data","Object","entries","reduce","previous","assign","removeAllEventListeners","validateWithStateUpdate","removeEventListener","isRadioInput","type","isCheckBoxInput","isDetached","element","HTMLElement","nodeType","Node","DOCUMENT_NODE","parentNode","findRemovedFieldAndRemoveListener","fields","forceDelete","name","mutationWatcher","fieldValue","options","forEach","disconnect","splice","defaultReturn","isValid","getRadioValue","checked","getMultipleSelectValue","filter","selected","map","isFileInput","isMultipleSelect","isEmptyString","defaultResult","validResult","getCheckboxValue","values","attributes","getFieldValue","files","getFieldsValues","isEmptyObject","keys","isSameError","error","message","get","obj","defaultValue","split","Boolean","shouldUpdateWithError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","isManual","isRegex","RegExp","getValueAndMessage","validationData","isPureObject","isString","isFunction","isBoolean","getValidateError","isStringValue","appendErrors","validateAllFieldCriteria","types","validateField","fieldsRef","valueAsNumber","valueAsDate","current","isRadio","isCheckBox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","maxValue","maxMessage","minValue","minMessage","valueNumber","parseFloat","exceedMin","valueDate","Date","maxLengthValue","minLengthValue","inputLength","toString","patternValue","patternMessage","validateRef","validateError","validateFunctions","Promise","resolve","validateResult","validationResult","parseErrorSchema","inner","validateWithSchema","validationSchema","abortEarly","getDefaultValue","defaultValues","flatArray","list","a","b","concat","isPrimitive","getPath","getInnerPath","pathWithIndex","getPath$1","parentPath","assignWatchFields","fieldValues","fieldName","watchFields","combinedDefaultValues","add","skipValidation","hasError","isBlurEvent","isOnSubmit","isReValidateOnSubmit","isOnBlur","isReValidateOnBlur","isSubmitted","isMatchFieldArrayName","searchName","startsWith","isNameInFieldArray","names","prev","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","document","childList","subtree","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","omitObject","_a","omitted","rest","unsetObject","target","isArrayObject","unset","paths","modeChecker","mode","isOnChange","useCallback","useForm","reValidateMode","submitFocusError","validateCriteriaMode","errorsRef","touchedFieldsRef","watchFieldsRef","Set","dirtyFieldsRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultRenderValuesRef","defaultValuesRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","fieldArrayNamesRef","render","isWindowUndefined","isWeb","isProxyEnabled","readFormState","dirty","submitCount","touched","isSubmitting","reRender","validateFieldCurry","validateFieldsSchemaCurry","renderBaseOnError","shouldRender","skipReRender","shouldReRender","delete","setFieldValue","rawValue","radioRef","FileList","selectRef","includes","checkboxRef","setDirty","isDirty","isDirtyChanged","size","setInternalValue","executeValidation","executeSchemaValidation","payload","previousFormIsValid","triggerValidation","all","every","setValue","shouldValidate","currentError","shouldSkipValidation","shouldUpdateDirty","shouldUpdateState","validForm","validateSchemaIsValid","then","resetFieldRef","removeEventListenerAndRef","clearError","setInternalError","preventRender","setError","watch","fieldNames","nest","unregister","registerFieldsRef","validateOptions","console","warn","fieldAttributes","currentField","find","fieldToAttachListener","register","refOrValidationOptions","validationOptions","handleSubmit","callback","preventDefault","persist","fieldErrors","resolvedPrevious","fieldError","focus","resetRefs","reset","closest","resetFieldArray","getValues","outputValues","formState","control","Proxy","prop","FormGlobalContext","useFormContext","FormContext","children","restMethods","Provider","generateId","d","performance","now","c","r","Math","random","appendId","id","mapIds","getIsFieldsDifferent","referenceArray","differenceArray","isMatch","useFieldArray","methods","memoizedDefaultValues","setField","resetFields","flagOrFields","append","prepend","remove","slice","insert","swap","indexA","indexB","move","from","to","resetFunctions","fieldArrayNames","getInputValue","isCheckbox","Controller","rules","InnerComponent","as","onChangeName","onBlurName","valueName","setInputStateValue","valueRef","isCheckboxInput","commonTask","eventWrapper","event","eventName","arg","handleBlur","registerField","defineProperty","props","ErrorMessage","messages"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createContext, useContext, createElement, useMemo, useState as useState$1, useEffect as useEffect$1, useRef as useRef$1, isValidElement, cloneElement, Fragment } from 'react';\n\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n};\r\nconst RADIO_INPUT = 'radio';\r\nconst FILE_INPUT = 'file';\r\nconst VALUE = 'value';\r\nconst UNDEFINED = 'undefined';\r\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n    INPUT: 'input',\r\n};\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\r\nconst REGEX_IS_DEEP_PROP = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\r\nconst REGEX_IS_PLAIN_PROP = /^\\w*$/;\r\nconst REGEX_PROP_NAME = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\r\nconst REGEX_ESCAPE_CHAR = /\\\\(\\\\)?/g;\n\nfunction attachEventListeners({ field, handleChange, isRadioOrCheckbox, }) {\r\n    const { ref } = field;\r\n    if (ref.addEventListener) {\r\n        ref.addEventListener(isRadioOrCheckbox ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\r\n        ref.addEventListener(EVENTS.BLUR, handleChange);\r\n    }\r\n}\n\nvar isUndefined = (val) => val === undefined;\n\nvar isNullOrUndefined = (value) => value === null || isUndefined(value);\n\nvar isArray = (value) => Array.isArray(value);\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n\nconst isKey = (value) => !isArray(value) &&\r\n    (REGEX_IS_PLAIN_PROP.test(value) || !REGEX_IS_DEEP_PROP.test(value));\r\nconst stringToPath = (string) => {\r\n    const result = [];\r\n    string.replace(REGEX_PROP_NAME, (match, number, quote, string) => {\r\n        result.push(quote ? string.replace(REGEX_ESCAPE_CHAR, '$1') : number || match);\r\n    });\r\n    return result;\r\n};\r\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nvar transformToNestObject = (data) => Object.entries(data).reduce((previous, [key, value]) => {\r\n    if (REGEX_IS_DEEP_PROP.test(key)) {\r\n        set(previous, key, value);\r\n        return previous;\r\n    }\r\n    return Object.assign(Object.assign({}, previous), { [key]: value });\r\n}, {});\n\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\r\n    if (ref.removeEventListener) {\r\n        ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\r\n    }\r\n};\n\nvar isRadioInput = (type) => type === RADIO_INPUT;\n\nvar isCheckBoxInput = (type) => type === 'checkbox';\n\nfunction isDetached(element) {\r\n    if (!element) {\r\n        return true;\r\n    }\r\n    if (!(element instanceof HTMLElement) ||\r\n        element.nodeType === Node.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    return isDetached(element.parentNode);\r\n}\n\nfunction findRemovedFieldAndRemoveListener(fields, handleChange, field, forceDelete) {\r\n    if (!field) {\r\n        return;\r\n    }\r\n    const { ref, ref: { name, type }, mutationWatcher, } = field;\r\n    if (!type) {\r\n        return;\r\n    }\r\n    const fieldValue = fields[name];\r\n    if ((isRadioInput(type) || isCheckBoxInput(type)) && fieldValue) {\r\n        const { options } = fieldValue;\r\n        if (isArray(options) && options.length) {\r\n            options.forEach(({ ref }, index) => {\r\n                if ((ref && isDetached(ref)) || forceDelete) {\r\n                    const mutationWatcher = ref.mutationWatcher;\r\n                    removeAllEventListeners(ref, handleChange);\r\n                    if (mutationWatcher) {\r\n                        mutationWatcher.disconnect();\r\n                    }\r\n                    options.splice(index, 1);\r\n                }\r\n            });\r\n            if (options && !options.length) {\r\n                delete fields[name];\r\n            }\r\n        }\r\n        else {\r\n            delete fields[name];\r\n        }\r\n    }\r\n    else if (isDetached(ref) || forceDelete) {\r\n        removeAllEventListeners(ref, handleChange);\r\n        if (mutationWatcher) {\r\n            mutationWatcher.disconnect();\r\n        }\r\n        delete fields[name];\r\n    }\r\n}\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: '',\r\n};\r\nvar getRadioValue = (options) => isArray(options)\r\n    ? options.reduce((previous, { ref: { checked, value } }) => checked\r\n        ? {\r\n            isValid: true,\r\n            value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nvar getMultipleSelectValue = (options) => [...options]\r\n    .filter(({ selected }) => selected)\r\n    .map(({ value }) => value);\n\nvar isFileInput = (type) => type === FILE_INPUT;\n\nvar isMultipleSelect = (type) => type === 'select-multiple';\n\nvar isEmptyString = (value) => value === '';\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter(({ ref: { checked } }) => checked)\r\n                .map(({ ref: { value } }) => value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        const { checked, value, attributes } = options[0].ref;\r\n        return checked\r\n            ? attributes && !isUndefined(attributes.value)\r\n                ? isUndefined(value) || isEmptyString(value)\r\n                    ? validResult\r\n                    : { value: value, isValid: true }\r\n                : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nfunction getFieldValue(fields, ref) {\r\n    const { type, name, options, value, files } = ref;\r\n    const field = fields[name];\r\n    if (isFileInput(type)) {\r\n        return files;\r\n    }\r\n    if (isRadioInput(type)) {\r\n        return field ? getRadioValue(field.options).value : '';\r\n    }\r\n    if (isMultipleSelect(type)) {\r\n        return getMultipleSelectValue(options);\r\n    }\r\n    if (isCheckBoxInput(type)) {\r\n        return field ? getCheckboxValue(field.options).value : false;\r\n    }\r\n    return value;\r\n}\n\nvar getFieldsValues = (fields) => Object.values(fields).reduce((previous, { ref, ref: { name } }) => (Object.assign(Object.assign({}, previous), { [name]: getFieldValue(fields, ref) })), {});\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar isSameError = (error, type, message) => isObject(error) && error.type === type && error.message === message;\n\nvar get = (obj, path, defaultValue) => {\r\n    const result = path\r\n        .split(/[,[\\].]+?/)\r\n        .filter(Boolean)\r\n        .reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n    return isUndefined(result) || result === obj\r\n        ? obj[path] || defaultValue\r\n        : result;\r\n};\n\nfunction shouldUpdateWithError({ errors, name, error, validFields, fieldsWithValidation, }) {\r\n    const isFieldValid = isEmptyObject(error);\r\n    const isFormValid = isEmptyObject(errors);\r\n    const currentFieldError = get(error, name);\r\n    const existFieldError = get(errors, name);\r\n    if ((isFieldValid && validFields.has(name)) ||\r\n        (existFieldError && existFieldError.isManual)) {\r\n        return false;\r\n    }\r\n    if (isFormValid !== isFieldValid ||\r\n        (!isFormValid && !existFieldError) ||\r\n        (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))) {\r\n        return true;\r\n    }\r\n    return (currentFieldError &&\r\n        !isSameError(existFieldError, currentFieldError.type, currentFieldError.message));\r\n}\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getValueAndMessage = (validationData) => {\r\n    const isPureObject = isObject(validationData) && !isRegex(validationData);\r\n    return {\r\n        value: isPureObject\r\n            ? validationData.value\r\n            : validationData,\r\n        message: isPureObject\r\n            ? validationData.message\r\n            : '',\r\n    };\r\n};\n\nvar isString = (value) => typeof value === 'string';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    const isStringValue = isString(result);\r\n    if (isStringValue || (isBoolean(result) && !result)) {\r\n        const message = isStringValue ? result : '';\r\n        return {\r\n            type,\r\n            message,\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => {\r\n    if (!validateAllFieldCriteria) {\r\n        return {};\r\n    }\r\n    const error = errors[name];\r\n    return Object.assign(Object.assign({}, error), { types: Object.assign(Object.assign({}, (error && error.types ? error.types : {})), { [type]: message || true }) });\r\n};\n\nvar validateField = async (fieldsRef, validateAllFieldCriteria, { ref, ref: { type, value, name, valueAsNumber, valueAsDate }, options, required, maxLength, minLength, min, max, pattern, validate, }) => {\r\n    const fields = fieldsRef.current;\r\n    const error = {};\r\n    const isRadio = isRadioInput(type);\r\n    const isCheckBox = isCheckBoxInput(type);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = isEmptyString(value);\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, (exceedMax\r\n            ? appendErrorsCurry(maxType, message)\r\n            : appendErrorsCurry(minType, message)));\r\n        if (!validateAllFieldCriteria) {\r\n            return error;\r\n        }\r\n    };\r\n    if (required &&\r\n        ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\r\n            (isBoolean(value) && !value) ||\r\n            (isCheckBox && !getCheckboxValue(options).isValid) ||\r\n            (isRadio && !getRadioValue(options).isValid))) {\r\n        const message = isString(required)\r\n            ? required\r\n            : getValueAndMessage(required).message;\r\n        error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: isRadioOrCheckbox ? fields[name].options[0].ref : ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\r\n        if (!validateAllFieldCriteria) {\r\n            return error;\r\n        }\r\n    }\r\n    if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\r\n        const { value: minValue, message: minMessage } = getValueAndMessage(min);\r\n        if (type === 'number' || (!type && !isNaN(value))) {\r\n            const valueNumber = valueAsNumber || parseFloat(value);\r\n            if (!isNullOrUndefined(maxValue)) {\r\n                exceedMax = valueNumber > maxValue;\r\n            }\r\n            if (!isNullOrUndefined(minValue)) {\r\n                exceedMin = valueNumber < minValue;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = valueAsDate || new Date(value);\r\n            if (isString(maxValue)) {\r\n                exceedMax = valueDate > new Date(maxValue);\r\n            }\r\n            if (isString(minValue)) {\r\n                exceedMin = valueDate < new Date(minValue);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxMessage, minMessage, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && !isEmpty && (maxLength || minLength)) {\r\n        const { value: maxLengthValue, message: maxLengthMessage, } = getValueAndMessage(maxLength);\r\n        const { value: minLengthValue, message: minLengthMessage, } = getValueAndMessage(minLength);\r\n        const inputLength = value.toString().length;\r\n        const exceedMax = maxLength && inputLength > maxLengthValue;\r\n        const exceedMin = minLength && inputLength < minLengthValue;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty) {\r\n        const { value: patternValue, message: patternMessage } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !patternValue.test(value)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message: patternMessage, ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        const fieldValue = getFieldValue(fields, ref);\r\n        const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\r\n        if (isFunction(validate)) {\r\n            const result = await validate(fieldValue);\r\n            const validateError = getValidateError(result, validateRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            const validateFunctions = Object.entries(validate);\r\n            const validationResult = await new Promise((resolve) => {\r\n                validateFunctions.reduce(async (previous, [key, validate], index) => {\r\n                    if ((!isEmptyObject(await previous) && !validateAllFieldCriteria) ||\r\n                        !isFunction(validate)) {\r\n                        return resolve(previous);\r\n                    }\r\n                    let result;\r\n                    const validateResult = await validate(fieldValue);\r\n                    const validateError = getValidateError(validateResult, validateRef, key);\r\n                    if (validateError) {\r\n                        result = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                        if (validateAllFieldCriteria) {\r\n                            error[name] = result;\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = previous;\r\n                    }\r\n                    return validateFunctions.length - 1 === index\r\n                        ? resolve(result)\r\n                        : result;\r\n                }, {});\r\n            });\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: validateRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return error;\r\n};\n\nconst parseErrorSchema = (error, validateAllFieldCriteria) => isArray(error.inner)\r\n    ? error.inner.reduce((previous, { path, message, type }) => (Object.assign(Object.assign({}, previous), (previous[path] && validateAllFieldCriteria\r\n        ? {\r\n            [path]: appendErrors(path, validateAllFieldCriteria, previous, type, message),\r\n        }\r\n        : {\r\n            [path]: previous[path] || Object.assign({ message,\r\n                type }, (validateAllFieldCriteria\r\n                ? {\r\n                    types: { [type]: message || true },\r\n                }\r\n                : {})),\r\n        }))), {})\r\n    : {\r\n        [error.path]: { message: error.message, type: error.type },\r\n    };\r\nasync function validateWithSchema(validationSchema, validateAllFieldCriteria, data) {\r\n    try {\r\n        return {\r\n            values: await validationSchema.validate(data, { abortEarly: false }),\r\n            errors: {},\r\n        };\r\n    }\r\n    catch (e) {\r\n        return {\r\n            values: {},\r\n            errors: transformToNestObject(parseErrorSchema(e, validateAllFieldCriteria)),\r\n        };\r\n    }\r\n}\n\nvar getDefaultValue = (defaultValues, name, defaultValue) => isUndefined(defaultValues[name])\r\n    ? get(defaultValues, name, defaultValue)\r\n    : defaultValues[name];\n\nfunction flatArray(list) {\r\n    return list.reduce((a, b) => a.concat(isArray(b) ? flatArray(b) : b), []);\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nconst getPath = (path, values) => {\r\n    const getInnerPath = (value, key, isObject) => {\r\n        const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\r\n        return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\r\n    };\r\n    return isArray(values)\r\n        ? values.map((value, key) => getInnerPath(value, key))\r\n        : Object.entries(values).map(([key, value]) => getInnerPath(value, key, true));\r\n};\r\nvar getPath$1 = (parentPath, value) => flatArray(getPath(parentPath, value));\n\nvar assignWatchFields = (fieldValues, fieldName, watchFields, combinedDefaultValues) => {\r\n    let value;\r\n    if (isEmptyObject(fieldValues)) {\r\n        value = undefined;\r\n    }\r\n    else if (!isUndefined(fieldValues[fieldName])) {\r\n        watchFields.add(fieldName);\r\n        value = fieldValues[fieldName];\r\n    }\r\n    else {\r\n        value = get(transformToNestObject(fieldValues), fieldName);\r\n        if (!isUndefined(value)) {\r\n            getPath$1(fieldName, value).forEach(name => watchFields.add(name));\r\n        }\r\n    }\r\n    return isUndefined(value)\r\n        ? isObject(combinedDefaultValues)\r\n            ? getDefaultValue(combinedDefaultValues, fieldName)\r\n            : combinedDefaultValues\r\n        : value;\r\n};\n\nvar skipValidation = ({ hasError, isBlurEvent, isOnSubmit, isReValidateOnSubmit, isOnBlur, isReValidateOnBlur, isSubmitted, }) => (isOnSubmit && isReValidateOnSubmit) ||\r\n    (isOnSubmit && !isSubmitted) ||\r\n    (isOnBlur && !isBlurEvent && !hasError) ||\r\n    (isReValidateOnBlur && !isBlurEvent && hasError) ||\r\n    (isReValidateOnSubmit && isSubmitted);\n\nconst isMatchFieldArrayName = (name, searchName) => name.startsWith(`${searchName}[`);\r\nvar isNameInFieldArray = (names, name) => [...names].reduce((prev, current) => (isMatchFieldArrayName(name, current) ? true : prev), false);\n\nfunction onDomRemove(element, onDetachCallback) {\r\n    const observer = new MutationObserver(() => {\r\n        if (isDetached(element)) {\r\n            observer.disconnect();\r\n            onDetachCallback();\r\n        }\r\n    });\r\n    observer.observe(window.document, {\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst omitObject = (obj, key) => {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const _a = key, omitted = obj[_a], rest = __rest(obj, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\r\n    return rest;\r\n};\n\nconst unsetObject = (target) => {\r\n    for (const key in target) {\r\n        const data = target[key];\r\n        const isArrayObject = isArray(data);\r\n        if ((isObject(data) || isArrayObject) && !data.ref) {\r\n            unsetObject(data);\r\n        }\r\n        if (isUndefined(data) ||\r\n            isEmptyObject(data) ||\r\n            (isArrayObject && !target[key].filter(Boolean).length)) {\r\n            delete target[key];\r\n        }\r\n    }\r\n    return target;\r\n};\r\nconst unset = (target, paths) => {\r\n    paths.forEach(path => {\r\n        set(target, path, undefined);\r\n    });\r\n    return unsetObject(target);\r\n};\n\nvar modeChecker = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n});\n\nconst { useRef, useState, useCallback, useEffect } = React;\r\nfunction useForm({ mode = VALIDATION_MODE.onSubmit, reValidateMode = VALIDATION_MODE.onChange, validationSchema, defaultValues = {}, submitFocusError = true, validateCriteriaMode, } = {}) {\r\n    const fieldsRef = useRef({});\r\n    const validateAllFieldCriteria = validateCriteriaMode === 'all';\r\n    const errorsRef = useRef({});\r\n    const touchedFieldsRef = useRef({});\r\n    const watchFieldsRef = useRef(new Set());\r\n    const dirtyFieldsRef = useRef(new Set());\r\n    const fieldsWithValidationRef = useRef(new Set());\r\n    const validFieldsRef = useRef(new Set());\r\n    const isValidRef = useRef(true);\r\n    const defaultRenderValuesRef = useRef({});\r\n    const defaultValuesRef = useRef(defaultValues);\r\n    const isUnMount = useRef(false);\r\n    const isWatchAllRef = useRef(false);\r\n    const isSubmittedRef = useRef(false);\r\n    const isDirtyRef = useRef(false);\r\n    const submitCountRef = useRef(0);\r\n    const isSubmittingRef = useRef(false);\r\n    const handleChangeRef = useRef();\r\n    const resetFieldArrayFunctionRef = useRef({});\r\n    const fieldArrayNamesRef = useRef(new Set());\r\n    const [, render] = useState();\r\n    const { isOnBlur, isOnSubmit } = useRef(modeChecker(mode)).current;\r\n    const isWindowUndefined = typeof window === UNDEFINED;\r\n    const isWeb = typeof document !== UNDEFINED &&\r\n        !isWindowUndefined &&\r\n        !isUndefined(window.HTMLElement);\r\n    const isProxyEnabled = isWeb && 'Proxy' in window;\r\n    const readFormState = useRef({\r\n        dirty: !isProxyEnabled,\r\n        isSubmitted: isOnSubmit,\r\n        submitCount: !isProxyEnabled,\r\n        touched: !isProxyEnabled,\r\n        isSubmitting: !isProxyEnabled,\r\n        isValid: !isProxyEnabled,\r\n    });\r\n    const { isOnBlur: isReValidateOnBlur, isOnSubmit: isReValidateOnSubmit, } = useRef(modeChecker(reValidateMode)).current;\r\n    defaultValuesRef.current = defaultValuesRef.current\r\n        ? defaultValuesRef.current\r\n        : defaultValues;\r\n    const reRender = useCallback(() => {\r\n        if (!isUnMount.current) {\r\n            render({});\r\n        }\r\n    }, []);\r\n    const validateFieldCurry = useCallback(validateField.bind(null, fieldsRef, validateAllFieldCriteria), []);\r\n    const validateFieldsSchemaCurry = useCallback(validateWithSchema.bind(null, validationSchema, validateAllFieldCriteria), [validationSchema]);\r\n    const renderBaseOnError = useCallback((name, error, shouldRender, skipReRender) => {\r\n        let shouldReRender = shouldRender ||\r\n            shouldUpdateWithError({\r\n                errors: errorsRef.current,\r\n                error,\r\n                name,\r\n                validFields: validFieldsRef.current,\r\n                fieldsWithValidation: fieldsWithValidationRef.current,\r\n            });\r\n        if (isEmptyObject(error)) {\r\n            if (fieldsWithValidationRef.current.has(name) || validationSchema) {\r\n                validFieldsRef.current.add(name);\r\n                shouldReRender = shouldReRender || get(errorsRef.current, name);\r\n            }\r\n            errorsRef.current = unset(errorsRef.current, [name]);\r\n        }\r\n        else {\r\n            validFieldsRef.current.delete(name);\r\n            shouldReRender = shouldReRender || !get(errorsRef.current, name);\r\n            set(errorsRef.current, name, error[name]);\r\n        }\r\n        if (shouldReRender && !skipReRender) {\r\n            reRender();\r\n            return true;\r\n        }\r\n    }, [reRender, validationSchema]);\r\n    const setFieldValue = useCallback((name, rawValue) => {\r\n        const field = fieldsRef.current[name];\r\n        if (!field) {\r\n            return false;\r\n        }\r\n        const ref = field.ref;\r\n        const { type } = ref;\r\n        const options = field.options;\r\n        const value = isWeb &&\r\n            ref instanceof window.HTMLElement &&\r\n            isNullOrUndefined(rawValue)\r\n            ? ''\r\n            : rawValue;\r\n        if (isRadioInput(type) && options) {\r\n            options.forEach(({ ref: radioRef }) => (radioRef.checked = radioRef.value === value));\r\n        }\r\n        else if (isFileInput(type)) {\r\n            if (value instanceof FileList || value === '') {\r\n                ref.files = value;\r\n            }\r\n            else {\r\n                ref.value = value;\r\n            }\r\n        }\r\n        else if (isMultipleSelect(type)) {\r\n            [...ref.options].forEach(selectRef => (selectRef.selected = value.includes(selectRef.value)));\r\n        }\r\n        else if (isCheckBoxInput(type) && options) {\r\n            options.length > 1\r\n                ? options.forEach(({ ref: checkboxRef }) => (checkboxRef.checked = value.includes(checkboxRef.value)))\r\n                : (options[0].ref.checked = !!value);\r\n        }\r\n        else {\r\n            ref.value = value;\r\n        }\r\n        return type;\r\n    }, [isWeb]);\r\n    const setDirty = (name) => {\r\n        if (!fieldsRef.current[name]) {\r\n            return false;\r\n        }\r\n        const isDirty = defaultRenderValuesRef.current[name] !==\r\n            getFieldValue(fieldsRef.current, fieldsRef.current[name].ref);\r\n        const isDirtyChanged = dirtyFieldsRef.current.has(name) !== isDirty;\r\n        if (isDirty) {\r\n            dirtyFieldsRef.current.add(name);\r\n        }\r\n        else {\r\n            dirtyFieldsRef.current.delete(name);\r\n        }\r\n        isDirtyRef.current = !!dirtyFieldsRef.current.size;\r\n        return isDirtyChanged && readFormState.current.dirty;\r\n    };\r\n    const setInternalValue = useCallback((name, value) => {\r\n        setFieldValue(name, value);\r\n        if (setDirty(name) ||\r\n            (!get(touchedFieldsRef.current, name) && readFormState.current.touched)) {\r\n            return !!set(touchedFieldsRef.current, name, true);\r\n        }\r\n    }, [setFieldValue]);\r\n    const executeValidation = useCallback(async (name, shouldRender, skipReRender) => {\r\n        const field = fieldsRef.current[name];\r\n        if (!field) {\r\n            return false;\r\n        }\r\n        if (shouldRender) {\r\n            reRender();\r\n        }\r\n        const error = await validateField(fieldsRef, validateAllFieldCriteria, field);\r\n        renderBaseOnError(name, error, false, skipReRender);\r\n        return isEmptyObject(error);\r\n    }, [reRender, renderBaseOnError, validateAllFieldCriteria]);\r\n    const executeSchemaValidation = useCallback(async (payload, shouldRender) => {\r\n        const { errors } = await validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(getFieldsValues(fieldsRef.current)));\r\n        const previousFormIsValid = isValidRef.current;\r\n        isValidRef.current = isEmptyObject(errors);\r\n        if (isArray(payload)) {\r\n            payload.forEach(name => {\r\n                if (errors[name]) {\r\n                    set(errorsRef.current, name, errors[name]);\r\n                }\r\n                else {\r\n                    unset(errorsRef.current, [name]);\r\n                }\r\n            });\r\n            reRender();\r\n        }\r\n        else {\r\n            const fieldName = payload;\r\n            const error = (get(errors, fieldName)\r\n                ? { [fieldName]: get(errors, fieldName) }\r\n                : {});\r\n            renderBaseOnError(fieldName, error, shouldRender || previousFormIsValid !== isValidRef.current);\r\n        }\r\n        return isEmptyObject(errorsRef.current);\r\n    }, [reRender, renderBaseOnError, validateAllFieldCriteria, validationSchema]);\r\n    const triggerValidation = useCallback(async (payload, shouldRender) => {\r\n        const fields = payload || Object.keys(fieldsRef.current);\r\n        if (validationSchema) {\r\n            return executeSchemaValidation(fields, shouldRender);\r\n        }\r\n        if (isArray(fields)) {\r\n            const result = await Promise.all(fields.map(async (data) => await executeValidation(data, false, true)));\r\n            reRender();\r\n            return result.every(Boolean);\r\n        }\r\n        return await executeValidation(fields, shouldRender);\r\n    }, [executeSchemaValidation, executeValidation, reRender, validationSchema]);\r\n    const setValue = useCallback((name, value, shouldValidate) => {\r\n        const shouldRender = setInternalValue(name, value) ||\r\n            isWatchAllRef.current ||\r\n            watchFieldsRef.current.has(name);\r\n        if (shouldValidate) {\r\n            return triggerValidation(name, shouldRender);\r\n        }\r\n        if (shouldRender) {\r\n            reRender();\r\n        }\r\n        return;\r\n    }, [reRender, setInternalValue, triggerValidation]);\r\n    handleChangeRef.current = handleChangeRef.current\r\n        ? handleChangeRef.current\r\n        : async ({ type, target }) => {\r\n            const name = target ? target.name : '';\r\n            const fields = fieldsRef.current;\r\n            const errors = errorsRef.current;\r\n            const field = fields[name];\r\n            const currentError = get(errors, name);\r\n            let error;\r\n            if (!field) {\r\n                return;\r\n            }\r\n            const isBlurEvent = type === EVENTS.BLUR;\r\n            const shouldSkipValidation = skipValidation({\r\n                hasError: !!currentError,\r\n                isBlurEvent,\r\n                isOnSubmit,\r\n                isReValidateOnSubmit,\r\n                isOnBlur,\r\n                isReValidateOnBlur,\r\n                isSubmitted: isSubmittedRef.current,\r\n            });\r\n            const shouldUpdateDirty = setDirty(name);\r\n            let shouldUpdateState = isWatchAllRef.current ||\r\n                watchFieldsRef.current.has(name) ||\r\n                shouldUpdateDirty;\r\n            if (isBlurEvent &&\r\n                !get(touchedFieldsRef.current, name) &&\r\n                readFormState.current.touched) {\r\n                set(touchedFieldsRef.current, name, true);\r\n                shouldUpdateState = true;\r\n            }\r\n            if (shouldSkipValidation) {\r\n                return shouldUpdateState && reRender();\r\n            }\r\n            if (validationSchema) {\r\n                const { errors } = await validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(getFieldsValues(fields)));\r\n                const validForm = isEmptyObject(errors);\r\n                error = (get(errors, name)\r\n                    ? { [name]: get(errors, name) }\r\n                    : {});\r\n                if (isValidRef.current !== validForm) {\r\n                    shouldUpdateState = true;\r\n                }\r\n                isValidRef.current = validForm;\r\n            }\r\n            else {\r\n                error = await validateField(fieldsRef, validateAllFieldCriteria, field);\r\n            }\r\n            if (!renderBaseOnError(name, error) && shouldUpdateState) {\r\n                reRender();\r\n            }\r\n        };\r\n    const validateSchemaIsValid = useCallback(() => {\r\n        const fieldValues = isEmptyObject(defaultValuesRef.current)\r\n            ? getFieldsValues(fieldsRef.current)\r\n            : defaultValuesRef.current;\r\n        validateFieldsSchemaCurry(transformToNestObject(fieldValues)).then(({ errors }) => {\r\n            const previousFormIsValid = isValidRef.current;\r\n            isValidRef.current = isEmptyObject(errors);\r\n            if (previousFormIsValid && previousFormIsValid !== isValidRef.current) {\r\n                reRender();\r\n            }\r\n        });\r\n    }, [reRender, validateFieldsSchemaCurry]);\r\n    const resetFieldRef = useCallback((name) => {\r\n        errorsRef.current = unset(errorsRef.current, [name]);\r\n        touchedFieldsRef.current = unset(touchedFieldsRef.current, [name]);\r\n        fieldsRef.current = omitObject(fieldsRef.current, name);\r\n        defaultRenderValuesRef.current = omitObject(defaultRenderValuesRef.current, name);\r\n        [\r\n            dirtyFieldsRef,\r\n            fieldsWithValidationRef,\r\n            validFieldsRef,\r\n            watchFieldsRef,\r\n        ].forEach(data => data.current.delete(name));\r\n        if (readFormState.current.isValid || readFormState.current.touched) {\r\n            reRender();\r\n        }\r\n        if (validationSchema) {\r\n            validateSchemaIsValid();\r\n        }\r\n    }, [reRender]);\r\n    const removeEventListenerAndRef = useCallback((field, forceDelete) => {\r\n        if (!field) {\r\n            return;\r\n        }\r\n        if (!isUndefined(handleChangeRef.current)) {\r\n            findRemovedFieldAndRemoveListener(fieldsRef.current, handleChangeRef.current, field, forceDelete);\r\n        }\r\n        resetFieldRef(field.ref.name);\r\n    }, [resetFieldRef]);\r\n    function clearError(name) {\r\n        if (isUndefined(name)) {\r\n            errorsRef.current = {};\r\n        }\r\n        else {\r\n            (isArray(name) ? name : [name]).forEach(fieldName => (errorsRef.current = omitObject(errorsRef.current, fieldName)));\r\n        }\r\n        reRender();\r\n    }\r\n    const setInternalError = ({ name, type, types, message, preventRender, }) => {\r\n        const field = fieldsRef.current[name];\r\n        if (!isSameError(errorsRef.current[name], type, message)) {\r\n            set(errorsRef.current, name, {\r\n                type,\r\n                types,\r\n                message,\r\n                ref: field ? field.ref : {},\r\n                isManual: true,\r\n            });\r\n            if (!preventRender) {\r\n                reRender();\r\n            }\r\n        }\r\n    };\r\n    function setError(name, type = '', message) {\r\n        if (isString(name)) {\r\n            setInternalError(Object.assign({ name }, (isObject(type)\r\n                ? {\r\n                    types: type,\r\n                    type: '',\r\n                }\r\n                : {\r\n                    type,\r\n                    message,\r\n                })));\r\n        }\r\n        else if (isArray(name)) {\r\n            name.forEach(error => setInternalError(Object.assign(Object.assign({}, error), { preventRender: true })));\r\n            reRender();\r\n        }\r\n    }\r\n    function watch(fieldNames, defaultValue) {\r\n        const combinedDefaultValues = isUndefined(defaultValue)\r\n            ? isUndefined(defaultValuesRef.current)\r\n                ? {}\r\n                : defaultValuesRef.current\r\n            : defaultValue;\r\n        const fieldValues = getFieldsValues(fieldsRef.current);\r\n        const watchFields = watchFieldsRef.current;\r\n        if (isProxyEnabled) {\r\n            readFormState.current.dirty = true;\r\n        }\r\n        if (isString(fieldNames)) {\r\n            return assignWatchFields(fieldValues, fieldNames, watchFields, combinedDefaultValues);\r\n        }\r\n        if (isArray(fieldNames)) {\r\n            return fieldNames.reduce((previous, name) => {\r\n                let value;\r\n                if (isEmptyObject(fieldsRef.current) &&\r\n                    isObject(combinedDefaultValues)) {\r\n                    value = getDefaultValue(combinedDefaultValues, name);\r\n                }\r\n                else {\r\n                    value = assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues);\r\n                }\r\n                return Object.assign(Object.assign({}, previous), { [name]: value });\r\n            }, {});\r\n        }\r\n        isWatchAllRef.current = true;\r\n        const result = (!isEmptyObject(fieldValues) && fieldValues) ||\r\n            defaultValue ||\r\n            defaultValuesRef.current;\r\n        return fieldNames && fieldNames.nest\r\n            ? transformToNestObject(result)\r\n            : result;\r\n    }\r\n    function unregister(names) {\r\n        if (!isEmptyObject(fieldsRef.current)) {\r\n            (isArray(names) ? names : [names]).forEach(fieldName => removeEventListenerAndRef(fieldsRef.current[fieldName], true));\r\n        }\r\n    }\r\n    function registerFieldsRef(ref, validateOptions = {}) {\r\n        if (!ref.name) {\r\n            return console.warn('Missing name @', ref);\r\n        }\r\n        const { name, type, value } = ref;\r\n        const fieldAttributes = Object.assign({ ref }, validateOptions);\r\n        const fields = fieldsRef.current;\r\n        const isRadioOrCheckbox = isRadioInput(type) || isCheckBoxInput(type);\r\n        let currentField = fields[name];\r\n        if (isRadioOrCheckbox\r\n            ? currentField &&\r\n                isArray(currentField.options) &&\r\n                currentField.options.find(({ ref }) => value === ref.value)\r\n            : currentField) {\r\n            fields[name] = Object.assign(Object.assign({}, currentField), validateOptions);\r\n            return;\r\n        }\r\n        if (type) {\r\n            const mutationWatcher = onDomRemove(ref, () => removeEventListenerAndRef(fieldAttributes));\r\n            if (isRadioOrCheckbox) {\r\n                currentField = Object.assign({ options: [\r\n                        ...((currentField && currentField.options) || []),\r\n                        {\r\n                            ref,\r\n                            mutationWatcher,\r\n                        },\r\n                    ], ref: { type, name } }, validateOptions);\r\n            }\r\n            else {\r\n                currentField = Object.assign(Object.assign({}, fieldAttributes), { mutationWatcher });\r\n            }\r\n        }\r\n        else {\r\n            currentField = fieldAttributes;\r\n        }\r\n        fields[name] = currentField;\r\n        if (!isEmptyObject(defaultValuesRef.current)) {\r\n            const defaultValue = getDefaultValue(defaultValuesRef.current, name);\r\n            if (!isUndefined(defaultValue) &&\r\n                !isNameInFieldArray(fieldArrayNamesRef.current, name)) {\r\n                setFieldValue(name, defaultValue);\r\n            }\r\n        }\r\n        if (validationSchema && readFormState.current.isValid) {\r\n            validateSchemaIsValid();\r\n        }\r\n        else if (!isEmptyObject(validateOptions)) {\r\n            fieldsWithValidationRef.current.add(name);\r\n            if (!isOnSubmit && readFormState.current.isValid) {\r\n                validateFieldCurry(currentField).then(error => {\r\n                    const previousFormIsValid = isValidRef.current;\r\n                    if (isEmptyObject(error)) {\r\n                        validFieldsRef.current.add(name);\r\n                    }\r\n                    else {\r\n                        isValidRef.current = false;\r\n                    }\r\n                    if (previousFormIsValid !== isValidRef.current) {\r\n                        reRender();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (!defaultRenderValuesRef.current[name]) {\r\n            defaultRenderValuesRef.current[name] = getFieldValue(fields, currentField.ref);\r\n        }\r\n        if (!type) {\r\n            return;\r\n        }\r\n        const fieldToAttachListener = isRadioOrCheckbox && currentField.options\r\n            ? currentField.options[currentField.options.length - 1]\r\n            : currentField;\r\n        attachEventListeners({\r\n            field: fieldToAttachListener,\r\n            isRadioOrCheckbox,\r\n            handleChange: handleChangeRef.current,\r\n        });\r\n    }\r\n    function register(refOrValidationOptions, validationOptions) {\r\n        if (isWindowUndefined || !refOrValidationOptions) {\r\n            return;\r\n        }\r\n        if (isString(refOrValidationOptions)) {\r\n            registerFieldsRef({ name: refOrValidationOptions }, validationOptions);\r\n            return;\r\n        }\r\n        if (isObject(refOrValidationOptions) && 'name' in refOrValidationOptions) {\r\n            registerFieldsRef(refOrValidationOptions, validationOptions);\r\n            return;\r\n        }\r\n        return (ref) => ref && registerFieldsRef(ref, refOrValidationOptions);\r\n    }\r\n    const handleSubmit = useCallback((callback) => async (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n            e.persist();\r\n        }\r\n        let fieldErrors;\r\n        let fieldValues;\r\n        const fields = fieldsRef.current;\r\n        if (readFormState.current.isSubmitting) {\r\n            isSubmittingRef.current = true;\r\n            reRender();\r\n        }\r\n        try {\r\n            if (validationSchema) {\r\n                fieldValues = getFieldsValues(fields);\r\n                const { errors, values } = await validateFieldsSchemaCurry(transformToNestObject(fieldValues));\r\n                errorsRef.current = errors;\r\n                fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                const { errors, values, } = await Object.values(fields).reduce(async (previous, field) => {\r\n                    if (!field) {\r\n                        return previous;\r\n                    }\r\n                    const resolvedPrevious = await previous;\r\n                    const { ref, ref: { name }, } = field;\r\n                    if (!fields[name]) {\r\n                        return Promise.resolve(resolvedPrevious);\r\n                    }\r\n                    const fieldError = await validateFieldCurry(field);\r\n                    if (fieldError[name]) {\r\n                        set(resolvedPrevious.errors, name, fieldError[name]);\r\n                        validFieldsRef.current.delete(name);\r\n                        return Promise.resolve(resolvedPrevious);\r\n                    }\r\n                    if (fieldsWithValidationRef.current.has(name)) {\r\n                        validFieldsRef.current.add(name);\r\n                    }\r\n                    resolvedPrevious.values[name] = getFieldValue(fields, ref);\r\n                    return Promise.resolve(resolvedPrevious);\r\n                }, Promise.resolve({\r\n                    errors: {},\r\n                    values: {},\r\n                }));\r\n                fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            if (isEmptyObject(fieldErrors)) {\r\n                errorsRef.current = {};\r\n                await callback(transformToNestObject(fieldValues), e);\r\n            }\r\n            else {\r\n                if (submitFocusError) {\r\n                    for (const key in fieldsRef.current) {\r\n                        if (get(fieldErrors, key)) {\r\n                            const field = fieldsRef.current[key];\r\n                            if (field) {\r\n                                if (field.ref.focus) {\r\n                                    field.ref.focus();\r\n                                    break;\r\n                                }\r\n                                else if (field.options) {\r\n                                    field.options[0].ref.focus();\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                errorsRef.current = fieldErrors;\r\n            }\r\n        }\r\n        finally {\r\n            isSubmittedRef.current = true;\r\n            isSubmittingRef.current = false;\r\n            submitCountRef.current = submitCountRef.current + 1;\r\n            reRender();\r\n        }\r\n    }, [\r\n        reRender,\r\n        submitFocusError,\r\n        validateFieldCurry,\r\n        validateFieldsSchemaCurry,\r\n        validationSchema,\r\n    ]);\r\n    const resetRefs = () => {\r\n        errorsRef.current = {};\r\n        fieldsRef.current = {};\r\n        touchedFieldsRef.current = {};\r\n        validFieldsRef.current = new Set();\r\n        fieldsWithValidationRef.current = new Set();\r\n        defaultRenderValuesRef.current = {};\r\n        watchFieldsRef.current = new Set();\r\n        dirtyFieldsRef.current = new Set();\r\n        isWatchAllRef.current = false;\r\n        isSubmittedRef.current = false;\r\n        isDirtyRef.current = false;\r\n        isValidRef.current = true;\r\n        submitCountRef.current = 0;\r\n    };\r\n    const reset = (values) => {\r\n        for (const value of Object.values(fieldsRef.current)) {\r\n            if (value && value.ref && value.ref.closest) {\r\n                try {\r\n                    value.ref.closest('form').reset();\r\n                    break;\r\n                }\r\n                catch (_a) { }\r\n            }\r\n        }\r\n        Object.values(resetFieldArrayFunctionRef.current).forEach(resetFieldArray => isFunction(resetFieldArray) && resetFieldArray(values));\r\n        resetRefs();\r\n        if (values) {\r\n            defaultValuesRef.current = values;\r\n        }\r\n        reRender();\r\n    };\r\n    const getValues = (payload) => {\r\n        const fieldValues = getFieldsValues(fieldsRef.current);\r\n        const outputValues = isEmptyObject(fieldValues)\r\n            ? defaultValuesRef.current\r\n            : fieldValues;\r\n        return payload && payload.nest\r\n            ? transformToNestObject(outputValues)\r\n            : outputValues;\r\n    };\r\n    useEffect(() => () => {\r\n        isUnMount.current = true;\r\n        fieldsRef.current &&\r\n            Object.values(fieldsRef.current).forEach((field) => removeEventListenerAndRef(field, true));\r\n    }, [removeEventListenerAndRef]);\r\n    if (!validationSchema) {\r\n        isValidRef.current =\r\n            validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\r\n                isEmptyObject(errorsRef.current);\r\n    }\r\n    const formState = {\r\n        dirty: isDirtyRef.current,\r\n        isSubmitted: isSubmittedRef.current,\r\n        submitCount: submitCountRef.current,\r\n        touched: touchedFieldsRef.current,\r\n        isSubmitting: isSubmittingRef.current,\r\n        isValid: isOnSubmit\r\n            ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\r\n            : isEmptyObject(fieldsRef.current) || isValidRef.current,\r\n    };\r\n    const control = {\r\n        register,\r\n        unregister,\r\n        setValue,\r\n        formState,\r\n        mode: {\r\n            isOnBlur,\r\n            isOnSubmit,\r\n        },\r\n        reValidateMode: {\r\n            isReValidateOnBlur,\r\n            isReValidateOnSubmit,\r\n        },\r\n        errors: errorsRef.current,\r\n        fieldsRef,\r\n        resetFieldArrayFunctionRef,\r\n        fieldArrayNamesRef,\r\n        isDirtyRef,\r\n        defaultValuesRef,\r\n    };\r\n    return {\r\n        watch,\r\n        control,\r\n        handleSubmit,\r\n        setValue,\r\n        triggerValidation,\r\n        getValues: useCallback(getValues, []),\r\n        reset: useCallback(reset, [reRender]),\r\n        register: useCallback(register, [\r\n            defaultRenderValuesRef.current,\r\n            defaultValuesRef.current,\r\n        ]),\r\n        unregister: useCallback(unregister, [removeEventListenerAndRef]),\r\n        clearError: useCallback(clearError, []),\r\n        setError: useCallback(setError, []),\r\n        errors: errorsRef.current,\r\n        formState: isProxyEnabled\r\n            ? new Proxy(formState, {\r\n                get: (obj, prop) => {\r\n                    if (prop in obj) {\r\n                        readFormState.current[prop] = true;\r\n                        return obj[prop];\r\n                    }\r\n                    return {};\r\n                },\r\n            })\r\n            : formState,\r\n    };\r\n}\n\nconst FormGlobalContext = createContext(null);\r\nfunction useFormContext() {\r\n    return useContext(FormGlobalContext);\r\n}\r\nfunction FormContext(_a) {\r\n    var { children, formState, errors } = _a, restMethods = __rest(_a, [\"children\", \"formState\", \"errors\"]);\r\n    return (createElement(FormGlobalContext.Provider, { value: Object.assign(Object.assign({}, restMethods), { formState, errors }) }, children));\r\n}\n\nvar generateId = () => {\r\n    const d = performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nconst appendId = (value) => (Object.assign(Object.assign({}, value), { id: generateId() }));\r\nconst mapIds = (data) => (isArray(data) ? data : []).map(value => appendId(value));\n\nfunction getIsFieldsDifferent(referenceArray, differenceArray) {\r\n    let isMatch = false;\r\n    if (referenceArray.length !== differenceArray.length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < referenceArray.length; i++) {\r\n        if (isMatch) {\r\n            break;\r\n        }\r\n        const _a = referenceArray[i], data = __rest(_a, [\"id\"]);\r\n        if (!differenceArray[i] ||\r\n            Object.keys(data).length !== Object.keys(differenceArray[i]).length) {\r\n            isMatch = true;\r\n            break;\r\n        }\r\n        for (const key in data) {\r\n            if (!differenceArray[i][key] || data[key] !== differenceArray[i][key]) {\r\n                isMatch = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return isMatch;\r\n}\n\nfunction useFieldArray({ control, name }) {\r\n    const methods = useFormContext();\r\n    const { resetFieldArrayFunctionRef, fieldArrayNamesRef, fieldsRef, defaultValuesRef, unregister, isDirtyRef, } = control || methods.control;\r\n    const memoizedDefaultValues = useMemo(() => get(defaultValuesRef.current, name, []), \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [name]);\r\n    const [fields, setField] = useState$1(mapIds(memoizedDefaultValues));\r\n    const resetFields = (flagOrFields) => {\r\n        isDirtyRef.current = isUndefined(flagOrFields)\r\n            ? true\r\n            : getIsFieldsDifferent(flagOrFields, memoizedDefaultValues);\r\n        for (const key in fieldsRef.current) {\r\n            if (isMatchFieldArrayName(key, name)) {\r\n                unregister(key);\r\n            }\r\n        }\r\n    };\r\n    const append = (value) => {\r\n        isDirtyRef.current = true;\r\n        setField([...fields, appendId(value)]);\r\n    };\r\n    const prepend = (value) => {\r\n        resetFields();\r\n        setField(mapIds([appendId(value), ...fields]));\r\n    };\r\n    const remove = (index) => {\r\n        const data = isUndefined(index)\r\n            ? []\r\n            : [...fields.slice(0, index), ...fields.slice(index + 1)];\r\n        resetFields(data);\r\n        setField(mapIds(data));\r\n    };\r\n    const insert = (index, value) => {\r\n        resetFields();\r\n        setField(mapIds([\r\n            ...fields.slice(0, index),\r\n            appendId(value),\r\n            ...fields.slice(index),\r\n        ]));\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        [fields[indexA], fields[indexB]] = [fields[indexB], fields[indexA]];\r\n        resetFields(fields);\r\n        setField(mapIds([...fields]));\r\n    };\r\n    const move = (from, to) => {\r\n        fields.splice(to, 0, fields.splice(from, 1)[0]);\r\n        resetFields(fields);\r\n        setField(mapIds([...fields]));\r\n    };\r\n    const reset = (values) => {\r\n        resetFields();\r\n        setField(mapIds(get(values, name)));\r\n    };\r\n    useEffect$1(() => {\r\n        const resetFunctions = resetFieldArrayFunctionRef.current;\r\n        const fieldArrayNames = fieldArrayNamesRef.current;\r\n        fieldArrayNames.add(name);\r\n        resetFunctions[name] = reset;\r\n        return () => {\r\n            resetFields();\r\n            delete resetFunctions[name];\r\n            fieldArrayNames.delete(name);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [name]);\r\n    return {\r\n        swap,\r\n        move,\r\n        prepend,\r\n        append,\r\n        remove,\r\n        insert,\r\n        fields,\r\n    };\r\n}\n\nvar getInputValue = (target, isCheckbox) => {\r\n    if (isNullOrUndefined(target)) {\r\n        return target;\r\n    }\r\n    return isCheckbox\r\n        ? isUndefined(target.checked)\r\n            ? target\r\n            : target.checked\r\n        : isUndefined(target.value)\r\n            ? target\r\n            : target.value;\r\n};\n\nconst Controller = (_a) => {\r\n    var { name, rules, as: InnerComponent, onChange, onBlur, onChangeName = VALIDATION_MODE.onChange, onBlurName = VALIDATION_MODE.onBlur, valueName, defaultValue, control } = _a, rest = __rest(_a, [\"name\", \"rules\", \"as\", \"onChange\", \"onBlur\", \"onChangeName\", \"onBlurName\", \"valueName\", \"defaultValue\", \"control\"]);\r\n    const methods = useFormContext();\r\n    const { defaultValuesRef, setValue, register, unregister, errors, mode: { isOnSubmit, isOnBlur }, reValidateMode: { isReValidateOnBlur, isReValidateOnSubmit }, formState: { isSubmitted }, fieldsRef, fieldArrayNamesRef, } = control || methods.control;\r\n    const [value, setInputStateValue] = useState$1(isUndefined(defaultValue)\r\n        ? get(defaultValuesRef.current, name)\r\n        : defaultValue);\r\n    const valueRef = useRef$1(value);\r\n    const isCheckboxInput = isBoolean(value);\r\n    const shouldValidate = (isBlurEvent) => !skipValidation({\r\n        hasError: !!errors[name],\r\n        isBlurEvent,\r\n        isOnBlur,\r\n        isOnSubmit,\r\n        isReValidateOnBlur,\r\n        isReValidateOnSubmit,\r\n        isSubmitted,\r\n    });\r\n    const commonTask = (target) => {\r\n        const data = getInputValue(target, isCheckboxInput);\r\n        setInputStateValue(data);\r\n        valueRef.current = data;\r\n        return data;\r\n    };\r\n    const eventWrapper = (event, eventName) => (...arg) => {\r\n        const data = commonTask(event(arg));\r\n        const isBlurEvent = eventName === EVENTS.BLUR;\r\n        setValue(name, data, shouldValidate(isBlurEvent));\r\n    };\r\n    const handleChange = (e) => {\r\n        const data = commonTask(e && e.target ? e.target : e);\r\n        setValue(name, data, shouldValidate());\r\n    };\r\n    const handleBlur = (e) => {\r\n        const data = commonTask(e && e.target ? e.target : e);\r\n        setValue(name, data, shouldValidate(true));\r\n    };\r\n    const registerField = () => register(Object.defineProperty({\r\n        name,\r\n    }, VALUE, {\r\n        set(data) {\r\n            setInputStateValue(data);\r\n            valueRef.current = data;\r\n        },\r\n        get() {\r\n            return valueRef.current;\r\n        },\r\n    }), Object.assign({}, rules));\r\n    if (!fieldsRef.current[name]) {\r\n        registerField();\r\n    }\r\n    useEffect$1(() => {\r\n        const fieldArrayNames = fieldArrayNamesRef.current;\r\n        registerField();\r\n        return () => {\r\n            if (!isNameInFieldArray(fieldArrayNames, name)) {\r\n                unregister(name);\r\n            }\r\n        };\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [name]);\r\n    const props = Object.assign(Object.assign(Object.assign(Object.assign({ name }, rest), (onChange\r\n        ? { [onChangeName]: eventWrapper(onChange, EVENTS.CHANGE) }\r\n        : { [onChangeName]: handleChange })), (isOnBlur || isReValidateOnBlur\r\n        ? onBlur\r\n            ? { [onBlurName]: eventWrapper(onBlur, EVENTS.BLUR) }\r\n            : { [onBlurName]: handleBlur }\r\n        : {})), { [valueName || (isCheckboxInput ? 'checked' : VALUE)]: value });\r\n    return isValidElement(InnerComponent) ? (cloneElement(InnerComponent, props)) : (createElement(InnerComponent, Object.assign({}, props)));\r\n};\n\nconst ErrorMessage = ({ as: InnerComponent, errors, name, children, }) => {\r\n    const methods = useFormContext();\r\n    const { message, types } = get(errors || methods.errors, name, {});\r\n    if (!message) {\r\n        return null;\r\n    }\r\n    const props = {\r\n        children: children ? children({ message, messages: types }) : message,\r\n    };\r\n    return InnerComponent ? (isValidElement(InnerComponent) ? (cloneElement(InnerComponent, props)) : (createElement(InnerComponent, Object.assign({}, props)))) : (createElement(Fragment, Object.assign({}, props)));\r\n};\n\nexport { Controller, ErrorMessage, FormContext, useFieldArray, useForm, useFormContext };\n"]},"metadata":{},"sourceType":"module"}