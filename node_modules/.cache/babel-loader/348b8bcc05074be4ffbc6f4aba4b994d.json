{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\src\\\\components\\\\Pages\\\\Summoner4.js\";\nimport { Card, Container } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { API_KEY } from './const';\nconst players = [\"Betrouni\"];\nexport default class Summoner4 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      post: {},\n      summoner_infos: [{}, {}],\n      summoner_id: '',\n      summoner_account_id: '',\n      status: 0,\n      error_message: null,\n      body: null,\n      icon_url: ''\n    };\n    const APICall = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + players[0] + API_KEY;\n    fetch(APICall).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(result => {\n      console.log('res', result);\n\n      if (result.status) {\n        this.setState({\n          status: result.status.status_code\n        });\n      } else {\n        this.setState({\n          status: 0\n        });\n      }\n\n      this.setState({\n        summoner_id: result.id,\n        summoner_account_id: result.accountId,\n        post: result\n      }); //icon\n\n      this.setState({\n        icon_url: 'http://ddragon.leagueoflegends.com/cdn/12.5.1/img/profileicon/' + result.profileIconId + '.png'\n      });\n\n      if (this.state.status === 0) {\n        fetch('https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/' + this.state.summoner_id + API_KEY).then(response => {\n          return response.json();\n        }).then(result => {\n          console.log('res is : ', result);\n          this.setState({\n            summoner_infos: result\n          });\n        });\n      } else {\n        console.log(this.state.status);\n      }\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          summoner_infos = _this$state.summoner_infos,\n          icon_url = _this$state.icon_url,\n          error_message = _this$state.error_message,\n          body = _this$state.body;\n    return React.createElement(TableRow, {\n      sx: {\n        'td, th': {\n          border: 0,\n          color: 'white'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Betrouni\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, players[0]), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, summoner_infos[1].tier, \" \", summoner_infos[1].rank), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, summoner_infos[1].wins), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, summoner_infos[1] && summoner_infos[1].losses ? summoner_infos[1].losses : null), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, summoner_infos[1].leaguePoints));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/src/components/Pages/Summoner4.js"],"names":["Card","Container","React","useState","Page","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","API_KEY","players","Summoner4","Component","constructor","props","state","name","post","summoner_infos","summoner_id","summoner_account_id","status","error_message","body","icon_url","APICall","fetch","then","response","console","log","json","result","setState","status_code","id","accountId","profileIconId","render","border","color","tier","rank","wins","losses","leaguePoints"],"mappings":"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","sourcesContent":["import { Card, Container } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Page from '../Page';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { API_KEY } from './const';\r\n\r\nconst players = [\"Betrouni\"];\r\n\r\nexport default class Summoner4 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            name: \"\",\r\n            post: {},\r\n            summoner_infos: [{},{}],\r\n            summoner_id: '',\r\n            summoner_account_id: '',\r\n            status: 0,\r\n            error_message: null,\r\n            body: null,\r\n            icon_url: '',\r\n        };\r\n    const APICall = \"https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" + players[0] + API_KEY;\r\n    fetch(APICall).then((response) => {\r\n        console.log(response);\r\n        return response.json();\r\n\r\n    }) .then((result) => {\r\n        console.log('res', result)\r\n        if (result.status) {\r\n            this.setState({ status: result.status.status_code })\r\n        } else {\r\n            this.setState({status: 0})\r\n        }\r\n        this.setState({ summoner_id: result.id, summoner_account_id: result.accountId, post: result });\r\n        //icon\r\n        this.setState({ icon_url: 'http://ddragon.leagueoflegends.com/cdn/12.5.1/img/profileicon/' + result.profileIconId + '.png' })\r\n        if (this.state.status === 0) {\r\n            fetch('https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/' + this.state.summoner_id + API_KEY)\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .then((result) => {\r\n                    console.log('res is : ', result)\r\n                    this.setState({ summoner_infos: result })\r\n                  \r\n                })\r\n        } else {\r\n            console.log(this.state.status)\r\n        }\r\n     \r\n    });\r\n\r\n    }\r\n    render() {\r\n\r\n        const { name, summoner_infos, icon_url, error_message, body } = this.state;\r\n    return (\r\n        \r\n \r\n            <TableRow\r\n              sx={{ 'td, th': { border: 0, color: 'white' } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">Betrouni</TableCell>\r\n\r\n              <TableCell align=\"right\">{players[0]}</TableCell>\r\n              <TableCell align=\"right\">{summoner_infos[1].tier } {summoner_infos[1].rank }</TableCell>\r\n              <TableCell align=\"right\">{summoner_infos[1].wins}</TableCell>\r\n              <TableCell align=\"right\">{(summoner_infos[1] && summoner_infos[1].losses) ? summoner_infos[1].losses : null}</TableCell>   \r\n              <TableCell align=\"right\">{summoner_infos[1].leaguePoints}</TableCell>         \r\n            </TableRow>\r\n  \r\n     \r\n    )\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}