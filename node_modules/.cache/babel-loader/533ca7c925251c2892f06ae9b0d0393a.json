{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\src\\\\components\\\\Pages\\\\Home.js\";\nimport { Card, Container } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { API_KEY } from './const';\n\nconst SummonerRow = ({\n  key,\n  name\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        summonerData = _useState2[0],\n        setSummonerData = _useState2[1];\n\n  useEffect(() => {\n    const fetchSummoner = async () => {\n      try {\n        const response = await fetch(`https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${name}${API_KEY}`);\n        const data = await response.json();\n        const summon_id = data.id;\n\n        const fetchSummonerData = async () => {\n          try {\n            const response = await fetch(`https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/${summon_id}${API_KEY}`);\n            const res = await response.json();\n\n            if (res[0].queueType == \"RANKED_FLEX_SR\") {\n              setSummonerData(res[1]);\n            } else {\n              setSummonerData(res[0]);\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        };\n\n        fetchSummonerData();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchSummoner();\n  }, [name]);\n\n  const _ref = (summonerData === null || summonerData === void 0 ? void 0 : summonerData.rankedData) || {},\n        tier = _ref.tier,\n        rank = _ref.rank,\n        wins = _ref.wins,\n        losses = _ref.losses,\n        leaguePoints = _ref.leaguePoints;\n\n  return React.createElement(TableRow, {\n    sx: {\n      'td, th': {\n        border: 0,\n        color: 'white'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, name), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, key), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, summonerData === null || summonerData === void 0 ? void 0 : summonerData.tier, \" \", summonerData === null || summonerData === void 0 ? void 0 : summonerData.rank), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, summonerData === null || summonerData === void 0 ? void 0 : summonerData.wins), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, summonerData === null || summonerData === void 0 ? void 0 : summonerData.losses), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, summonerData === null || summonerData === void 0 ? void 0 : summonerData.leaguePoints));\n};\n\nconst Home = () => {\n  const players = [\"Haaaan\", \"Haaaan\", \"Haaaan\"];\n  const items = [{\n    joueur: \"Alvyn\",\n    name: \"Haaaan\"\n  }, {\n    joueur: \"Alvyn\",\n    name: \"Haaaan\"\n  }, {\n    joueur: \"Alvyn\",\n    name: \"Haaaan\"\n  }];\n  return React.createElement(Page, {\n    title: \"Ranking\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Table, {\n    sx: {\n      minWidth: 650,\n      bgcolor: '#2F4F4F'\n    },\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Player\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Summoner Name\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Rank\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"W\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"L\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"LP\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, items.map(items => React.createElement(SummonerRow, {\n    key: items.joueur,\n    name: items.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/src/components/Pages/Home.js"],"names":["Card","Container","React","useState","useEffect","Page","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","API_KEY","SummonerRow","key","name","summonerData","setSummonerData","fetchSummoner","response","fetch","data","json","summon_id","id","fetchSummonerData","res","queueType","error","console","rankedData","tier","rank","wins","losses","leaguePoints","border","color","Home","players","items","joueur","minWidth","bgcolor","map"],"mappings":"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","sourcesContent":["import { Card, Container } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { API_KEY } from './const';\n\nconst SummonerRow = ({ key, name }) => {\n  const [summonerData, setSummonerData] = useState({});\n\n  useEffect(() => {\n    const fetchSummoner = async () => {\n      try {\n        const response = await fetch(`https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${name}${API_KEY}`);\n        const data = await response.json();\n        const summon_id = data.id;\n        const fetchSummonerData = async () => {\n          try {\n            const response = await fetch(`https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/${summon_id}${API_KEY}`);\n            const res = await response.json();\n            if (res[0].queueType ==  \"RANKED_FLEX_SR\") {\n                setSummonerData(res[1]);\n            } else {\n                setSummonerData(res[0]);\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        };\n        fetchSummonerData();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchSummoner();\n  }, [name]);\n  \n\n  const { tier, rank, wins, losses, leaguePoints } = summonerData?.rankedData || {};\n\n  return (\n    <TableRow sx={{ 'td, th': { border: 0, color: 'white' } }}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell align=\"right\">{key}</TableCell>\n      <TableCell align=\"right\">{summonerData?.tier} {summonerData?.rank}</TableCell>\n      <TableCell align=\"right\">{summonerData?.wins}</TableCell>\n      <TableCell align=\"right\">{summonerData?.losses}</TableCell>\n      <TableCell align=\"right\">{summonerData?.leaguePoints}</TableCell>\n    </TableRow>\n  );\n};\n\nconst Home = () => {\n  const players = [\"Haaaan\", \"Haaaan\", \"Haaaan\"];\n  const items = [\n    { joueur: \"Alvyn\", name: \"Haaaan\" },\n    { joueur: \"Alvyn\", name: \"Haaaan\" },\n    { joueur: \"Alvyn\", name: \"Haaaan\" }\n  ];\n  \n\n  return (\n    <Page title=\"Ranking\">\n      <Container>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650, bgcolor: '#2F4F4F' }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell sx={{ color: 'white' }}>Player</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">Summoner Name</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">Rank</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">W</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">L</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">LP</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.map((items) => (\n                <SummonerRow key={items.joueur} name={items.name} />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}