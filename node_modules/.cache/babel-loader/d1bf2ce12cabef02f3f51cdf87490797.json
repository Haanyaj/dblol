{"ast":null,"code":"import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const _ref = options || {},\n        _ref$enableColorSchem = _ref.enableColorScheme,\n        enableColorScheme = _ref$enableColorSchem === void 0 ? true : _ref$enableColorSchem,\n        _ref$defaultMode = _ref.defaultMode,\n        defaultMode = _ref$defaultMode === void 0 ? 'light' : _ref$defaultMode,\n        _ref$defaultLightColo = _ref.defaultLightColorScheme,\n        defaultLightColorScheme = _ref$defaultLightColo === void 0 ? 'light' : _ref$defaultLightColo,\n        _ref$defaultDarkColor = _ref.defaultDarkColorScheme,\n        defaultDarkColorScheme = _ref$defaultDarkColor === void 0 ? 'dark' : _ref$defaultDarkColor,\n        _ref$modeStorageKey = _ref.modeStorageKey,\n        modeStorageKey = _ref$modeStorageKey === void 0 ? DEFAULT_MODE_STORAGE_KEY : _ref$modeStorageKey,\n        _ref$colorSchemeStora = _ref.colorSchemeStorageKey,\n        colorSchemeStorageKey = _ref$colorSchemeStora === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _ref$colorSchemeStora,\n        _ref$attribute = _ref.attribute,\n        attribute = _ref$attribute === void 0 ? DEFAULT_ATTRIBUTE : _ref$attribute,\n        _ref$colorSchemeNode = _ref.colorSchemeNode,\n        colorSchemeNode = _ref$colorSchemeNode === void 0 ? 'document.documentElement' : _ref$colorSchemeNode;\n\n  return (\n    /*#__PURE__*/\n    _jsx(\"script\", {\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML: {\n        __html: `(function() { try {\n        var mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n        var cssColorScheme = mode;\n        var colorScheme = '';\n        if (mode === 'system') {\n          // handle system mode\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\n          if (mql.matches) {\n            cssColorScheme = 'dark';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n          } else {\n            cssColorScheme = 'light';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n          }\n        }\n        if (mode === 'light') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n        }\n        if (mode === 'dark') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n        }\n        if (colorScheme) {\n          ${colorSchemeNode}.setAttribute('${attribute}', colorScheme);\n        }\n        if (${enableColorScheme} && !!cssColorScheme) {\n          ${colorSchemeNode}.style.setProperty('color-scheme', cssColorScheme);\n        }\n      } catch (e) {} })();`\n      }\n    })\n  );\n}","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js"],"names":["React","jsx","_jsx","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","getInitColorSchemeScript","options","enableColorScheme","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","modeStorageKey","colorSchemeStorageKey","attribute","colorSchemeNode","dangerouslySetInnerHTML","__html"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,MAAMC,wBAAwB,GAAG,MAAjC;AACP,OAAO,MAAMC,gCAAgC,GAAG,cAAzC;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,eAAe,SAASC,wBAAT,CAAkCC,OAAlC,EAA2C;AAAA,eAUpDA,OAAO,IAAI,EAVyC;AAAA,qCAEtDC,iBAFsD;AAAA,QAEtDA,iBAFsD,sCAElC,IAFkC;AAAA,gCAGtDC,WAHsD;AAAA,QAGtDA,WAHsD,iCAGxC,OAHwC;AAAA,qCAItDC,uBAJsD;AAAA,QAItDA,uBAJsD,sCAI5B,OAJ4B;AAAA,qCAKtDC,sBALsD;AAAA,QAKtDA,sBALsD,sCAK7B,MAL6B;AAAA,mCAMtDC,cANsD;AAAA,QAMtDA,cANsD,oCAMrCT,wBANqC;AAAA,qCAOtDU,qBAPsD;AAAA,QAOtDA,qBAPsD,sCAO9BT,gCAP8B;AAAA,8BAQtDU,SARsD;AAAA,QAQtDA,SARsD,+BAQ1CT,iBAR0C;AAAA,oCAStDU,eATsD;AAAA,QAStDA,eATsD,qCASpC,0BAToC;;AAWxD;AAAO;AAAab,IAAAA,IAAI,CAAC,QAAD,EAAW;AACjC;AACAc,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAG;2CAC4BL,cAAe,UAASH,WAAY;;;;;;;;kDAQ7BI,qBAAsB,eAAcF,sBAAuB;;;kDAG3DE,qBAAsB,gBAAeH,uBAAwB;;;;gDAI/DG,qBAAsB,gBAAeH,uBAAwB;;;gDAG7DG,qBAAsB,eAAcF,sBAAuB;;;YAG/FI,eAAgB,kBAAiBD,SAAU;;cAEzCN,iBAAkB;YACpBO,eAAgB;;;AA1BC;AAFQ,KAAX;AAAxB;AAiCD","sourcesContent":["import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const {\n    enableColorScheme = true,\n    defaultMode = 'light',\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement'\n  } = options || {};\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: `(function() { try {\n        var mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n        var cssColorScheme = mode;\n        var colorScheme = '';\n        if (mode === 'system') {\n          // handle system mode\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\n          if (mql.matches) {\n            cssColorScheme = 'dark';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n          } else {\n            cssColorScheme = 'light';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n          }\n        }\n        if (mode === 'light') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n        }\n        if (mode === 'dark') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n        }\n        if (colorScheme) {\n          ${colorSchemeNode}.setAttribute('${attribute}', colorScheme);\n        }\n        if (${enableColorScheme} && !!cssColorScheme) {\n          ${colorSchemeNode}.style.setProperty('color-scheme', cssColorScheme);\n        }\n      } catch (e) {} })();`\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}