{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Haan\\\\Documents\\\\reactlol\\\\src\\\\components\\\\Pages\\\\Home.js\";\nimport { Card, Container } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { API_KEY } from './const';\nimport { TrainRounded } from '@material-ui/icons';\n\nconst SummonerRow = ({\n  joueur,\n  name,\n  region\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        summonerData = _useState2[0],\n        setSummonerData = _useState2[1];\n\n  useEffect(() => {\n    const fetchSummoner = async () => {\n      try {\n        const response = await fetch(`https://${region}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${name}${API_KEY}`);\n        const data = await response.json();\n        const summon_id = data.id;\n\n        const fetchSummonerData = async () => {\n          try {\n            const response = await fetch(`https://${region}.api.riotgames.com/lol/league/v4/entries/by-summoner/${summon_id}${API_KEY}`);\n            const res = await response.json();\n\n            if (res[0].queueType == \"RANKED_FLEX_SR\") {\n              setSummonerData(res[1]);\n            } else {\n              setSummonerData(res[0]);\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        };\n\n        const fetchIG = async () => {\n          try {\n            const response = await fetch(`https://${region}.api.riotgames.com/lol/spectator/v4/active-games/by-summoner/${summon_id}${API_KEY}`);\n            const dat = await dat.json();\n            setSummonerData(prevState => _objectSpread({}, prevState, {\n              veteran: true\n            }));\n            console.log(summonerData);\n          } catch (error) {\n            console.error(error);\n            setSummonerData(prevState => _objectSpread({}, prevState, {\n              veteran: false\n            }));\n          }\n        };\n\n        fetchSummonerData();\n        fetchIG();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchSummoner();\n  }, [name]);\n  const rankImg = `/dblol/img/${summonerData.tier}.png`;\n  return React.createElement(TableRow, {\n    sx: {\n      'td, th': {\n        border: 0,\n        color: 'white'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, joueur), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, name), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: rankImg,\n    style: {\n      height: '1.5rem',\n      marginRight: '0.5rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), summonerData === null || summonerData === void 0 ? void 0 : summonerData.tier, \" \", summonerData === null || summonerData === void 0 ? void 0 : summonerData.rank), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, summonerData === null || summonerData === void 0 ? void 0 : summonerData.wins), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, summonerData === null || summonerData === void 0 ? void 0 : summonerData.losses), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, summonerData === null || summonerData === void 0 ? void 0 : summonerData.leaguePoints), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, summonerData.veteran == false ? React.createElement(\"a\", {\n    href: `https://${region.slice(0, -1)}.op.gg/summoner/userName=${name}/ingame`,\n    className: \"playing-link\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Playing\") : \"Off\"));\n};\n\nconst Home = () => {\n  const players = [{\n    joueur: \"Alvyn\",\n    name: \"IvanJBCK\",\n    region: \"euw1\"\n  }, {\n    joueur: \"Victor\",\n    name: \"Treqz\",\n    region: \"na1\"\n  }, {\n    joueur: \"C\",\n    name: \"Tseng45\",\n    region: \"euw1\"\n  }];\n  return React.createElement(Page, {\n    title: \"DB Ranking\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Table, {\n    sx: {\n      minWidth: 650,\n      bgcolor: '#2F4F4F'\n    },\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Player\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Summoner Name\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Rank\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"W\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"L\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"LP\"), React.createElement(TableCell, {\n    sx: {\n      color: 'white'\n    },\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"InGame\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, players.map(players => React.createElement(SummonerRow, {\n    key: players.name,\n    name: players.name,\n    joueur: players.joueur,\n    region: players.region,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Haan/Documents/reactlol/src/components/Pages/Home.js"],"names":["Card","Container","React","useState","useEffect","Page","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","API_KEY","TrainRounded","SummonerRow","joueur","name","region","summonerData","setSummonerData","fetchSummoner","response","fetch","data","json","summon_id","id","fetchSummonerData","res","queueType","error","console","fetchIG","dat","prevState","veteran","log","rankImg","tier","border","color","height","marginRight","rank","wins","losses","leaguePoints","slice","Home","players","minWidth","bgcolor","map"],"mappings":"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","sourcesContent":["import { Card, Container } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Page from '../Page';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { API_KEY } from './const';\nimport { TrainRounded } from '@material-ui/icons';\n\nconst SummonerRow = ({joueur, name, region }) => {\n  const [summonerData, setSummonerData] = useState({});\n\n  useEffect(() => {\n    const fetchSummoner = async () => {\n      try {\n        const response = await fetch(`https://${region}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${name}${API_KEY}`);\n        const data = await response.json();\n        const summon_id = data.id;\n        const fetchSummonerData = async () => {\n          try {\n            const response = await fetch(`https://${region}.api.riotgames.com/lol/league/v4/entries/by-summoner/${summon_id}${API_KEY}`);\n            const res = await response.json();\n            if (res[0].queueType ==  \"RANKED_FLEX_SR\") {\n                setSummonerData(res[1]);\n            } else {\n                setSummonerData(res[0]);\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        };\n        const fetchIG = async () => {\n          try {\n            const response = await fetch(`https://${region}.api.riotgames.com/lol/spectator/v4/active-games/by-summoner/${summon_id}${API_KEY}`);\n            const dat = await dat.json();\n            setSummonerData(prevState => ({...prevState, veteran: true}));\n            console.log(summonerData)\n            \n          } catch (error) {\n            console.error(error);\n            setSummonerData(prevState => ({...prevState, veteran: false}));\n          }\n        };\n        fetchSummonerData();\n        fetchIG();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchSummoner();\n  }, [name]);\n\n  const rankImg = `/dblol/img/${summonerData.tier}.png`;\n\n  return (\n    <TableRow sx={{ 'td, th': { border: 0, color: 'white' } }}>\n      <TableCell component=\"th\" scope=\"row\">\n        {joueur}\n      </TableCell>\n      <TableCell align=\"right\">{name}</TableCell>\n      <TableCell align=\"right\"> {<img src={rankImg}  style={{ height: '1.5rem', marginRight: '0.5rem' }} />}{summonerData?.tier} {summonerData?.rank}</TableCell>\n      <TableCell align=\"right\">{summonerData?.wins}</TableCell>\n      <TableCell align=\"right\">{summonerData?.losses}</TableCell>\n      <TableCell align=\"right\">{summonerData?.leaguePoints}</TableCell>\n      <TableCell align=\"right\">{summonerData.veteran == false? (<a href={`https://${region.slice(0, -1)}.op.gg/summoner/userName=${name}/ingame`} className=\"playing-link\" target=\"_blank\" rel=\"noopener noreferrer\">Playing</a>) : \"Off\"}</TableCell>\n    </TableRow>\n  );\n};\n\nconst Home = () => {\n  const players = [\n    { joueur: \"Alvyn\", name: \"IvanJBCK\", region: \"euw1\" },\n    { joueur: \"Victor\", name: \"Treqz\", region: \"na1\"  },\n    { joueur: \"C\", name: \"Tseng45\" , region: \"euw1\" },\n  ];\n  \n\n  return (\n    <Page title=\"DB Ranking\">\n      <Container>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650, bgcolor: '#2F4F4F' }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell sx={{ color: 'white' }}>Player</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">Summoner Name</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">Rank</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">W</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">L</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"right\">LP</TableCell>                \n                <TableCell sx={{ color: 'white' }} align=\"right\">InGame</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {players.map((players) => (\n                <SummonerRow key={players.name} name={players.name} joueur= {players.joueur} region = {players.region}/>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}